'------------------------------------------------------------------------------
' <auto-generated>
'    Tento kód byl generován ze šablony.
'
'    Ruční změny tohoto souboru mohou způsobit neočekávané chování v aplikaci.
'    Ruční změny tohoto souboru budou přepsány, pokud bude kód vygenerován znovu.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class TRACEEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=TRACEEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property tblLastLapses() As DbSet(Of tblLastLapse)
    Public Property tblRegisterRestrictions() As DbSet(Of tblRegisterRestriction)
    Public Property tblRoles() As DbSet(Of tblRole)
    Public Property vw_ListReminders() As DbSet(Of vw_ListReminders)
    Public Property vw_ListUrgAndRemind() As DbSet(Of vw_ListUrgAndRemind)
    Public Property vw_SumPaymentsByFV() As DbSet(Of vw_SumPaymentsByFV)
    Public Property vwrr_AddressType() As DbSet(Of vwrr_AddressType)
    Public Property vwrr_AddressValidity() As DbSet(Of vwrr_AddressValidity)
    Public Property vwrr_ClosedFile() As DbSet(Of vwrr_ClosedFile)
    Public Property vwrr_Currency() As DbSet(Of vwrr_Currency)
    Public Property vwrr_PAType() As DbSet(Of vwrr_PAType)
    Public Property vwrr_PAValidityType() As DbSet(Of vwrr_PAValidityType)
    Public Property vwrr_PaymentLabel() As DbSet(Of vwrr_PaymentLabel)
    Public Property vwrr_PersType() As DbSet(Of vwrr_PersType)
    Public Property vwrr_PhoneValidity() As DbSet(Of vwrr_PhoneValidity)
    Public Property vwrr_ReminderType() As DbSet(Of vwrr_ReminderType)
    Public Property vwrr_State() As DbSet(Of vwrr_State)
    Public Property vwrr_Urgency() As DbSet(Of vwrr_Urgency)
    Public Property vwSpisyPlatbyPred1OSN() As DbSet(Of vwSpisyPlatbyPred1OSN)
    Public Property tblObjectAccessibilities() As DbSet(Of tblObjectAccessibility)
    Public Property tblUsers() As DbSet(Of tblUser)
    Public Property tblOSNObjectDefinitions() As DbSet(Of tblOSNObjectDefinition)
    Public Property vwrr_PersTypeMini() As DbSet(Of vwrr_PersTypeMini)
    Public Property tblConstants() As DbSet(Of tblConstant)
    Public Property tblUsersLoginLogs() As DbSet(Of tblUsersLoginLog)
    Public Property vw_Campaign() As DbSet(Of vw_Campaign)
    Public Property vw_CampMember() As DbSet(Of vw_CampMember)
    Public Property vw_Constant1() As DbSet(Of vw_Constant1)
    Public Property tblCampMembers() As DbSet(Of tblCampMember)
    Public Property tblCampaigns() As DbSet(Of tblCampaign)
    Public Property tblCampRouteTrajectories() As DbSet(Of tblCampRouteTrajectory)
    Public Property vw_CampCompare_GPS_Date() As DbSet(Of vw_CampCompare_GPS_Date)
    Public Property tblExternalAddresses() As DbSet(Of tblExternalAddress)
    Public Property vw_AllUrgRemindMsg() As DbSet(Of vw_AllUrgRemindMsg)
    Public Property vw_CampaignALL() As DbSet(Of vw_CampaignALL)
    Public Property tblOSNUnfinisheds() As DbSet(Of tblOSNUnfinished)
    Public Property tblAAALogs() As DbSet(Of tblAAALog)
    Public Property tblKomposts() As DbSet(Of tblKompost)
    Public Property tblErrors() As DbSet(Of tblError)
    Public Property tblSpisyOsobyAdresies() As DbSet(Of tblSpisyOsobyAdresy)
    Public Property tblSpisyDocuments() As DbSet(Of tblSpisyDocument)
    Public Property vwA1_Dohody() As DbSet(Of vwA1_Dohody)
    Public Property vwA1_Finished() As DbSet(Of vwA1_Finished)
    Public Property vwA1_KeZprac() As DbSet(Of vwA1_KeZprac)
    Public Property vwA1_Novy() As DbSet(Of vwA1_Novy)
    Public Property vwA1_OSN() As DbSet(Of vwA1_OSN)
    Public Property vwA2_DLDohody() As DbSet(Of vwA2_DLDohody)
    Public Property vwA2_DLDohodySub() As DbSet(Of vwA2_DLDohodySub)
    Public Property vwA2_DLKeZprac() As DbSet(Of vwA2_DLKeZprac)
    Public Property vwA2_DLKeZpracSub() As DbSet(Of vwA2_DLKeZpracSub)
    Public Property vwA2_DLNovy() As DbSet(Of vwA2_DLNovy)
    Public Property vwA2_DLNovySub() As DbSet(Of vwA2_DLNovySub)
    Public Property vwA2_DLOSNSub() As DbSet(Of vwA2_DLOSNSub)
    Public Property vwAD_Basic() As DbSet(Of vwAD_Basic)
    Public Property vwAD_DLBasicSub() As DbSet(Of vwAD_DLBasicSub)
    Public Property vwAD_F21_WithoutFV() As DbSet(Of vwAD_F21_WithoutFV)
    Public Property vwAD_F22_WithFirstFV() As DbSet(Of vwAD_F22_WithFirstFV)
    Public Property vwAD_F23_WithSecondFV() As DbSet(Of vwAD_F23_WithSecondFV)
    Public Property vwAD_F24_WithMoreThanSecond() As DbSet(Of vwAD_F24_WithMoreThanSecond)
    Public Property vwAD_F31_WithUrgencyOnly() As DbSet(Of vwAD_F31_WithUrgencyOnly)
    Public Property vwAD_F310_AgrCancOver5Days() As DbSet(Of vwAD_F310_AgrCancOver5Days)
    Public Property vwAD_F311_DateLapseUnder6M() As DbSet(Of vwAD_F311_DateLapseUnder6M)
    Public Property vwAD_F312_ReturToCredUnder2M() As DbSet(Of vwAD_F312_ReturToCredUnder2M)
    Public Property vwAD_F313_DPlanOverDMax() As DbSet(Of vwAD_F313_DPlanOverDMax)
    Public Property vwAD_F314_UrgCashToCreditor() As DbSet(Of vwAD_F314_UrgCashToCreditor)
    Public Property vwAD_F32_NotYetAcceptedAfter2Days() As DbSet(Of vwAD_F32_NotYetAcceptedAfter2Days)
    Public Property vwAD_F33_NotYetAccepted() As DbSet(Of vwAD_F33_NotYetAccepted)
    Public Property vwAD_F34_NewReturned() As DbSet(Of vwAD_F34_NewReturned)
    Public Property vwAD_F35_WithoutPlanFV__dodelat() As DbSet(Of vwAD_F35_WithoutPlanFV__dodelat)
    Public Property vwAD_F36_DateFVOver() As DbSet(Of vwAD_F36_DateFVOver)
    Public Property vwAD_F37_MaxFVDateOver() As DbSet(Of vwAD_F37_MaxFVDateOver)
    Public Property vwAD_F38_Urgency58() As DbSet(Of vwAD_F38_Urgency58)
    Public Property vwAD_F39_AgreementCanceled() As DbSet(Of vwAD_F39_AgreementCanceled)
    Public Property vwAD_F41_ClosedAll() As DbSet(Of vwAD_F41_ClosedAll)
    Public Property vwAD_F42_ClosedBySuper() As DbSet(Of vwAD_F42_ClosedBySuper)
    Public Property vwAD_F43_ClosedFromProcess() As DbSet(Of vwAD_F43_ClosedFromProcess)
    Public Property vwAD_F44_ConditionedClose() As DbSet(Of vwAD_F44_ConditionedClose)
    Public Property vwAD_F45_InReturnRequest() As DbSet(Of vwAD_F45_InReturnRequest)
    Public Property vw_Users() As DbSet(Of vw_Users)
    Public Property vwAD_DLBasic() As DbSet(Of vwAD_DLBasic)
    Public Property vwA2_DLOSN() As DbSet(Of vwA2_DLOSN)
    Public Property vw_CreditorTemplates() As DbSet(Of vw_CreditorTemplates)
    Public Property tblSpisies() As DbSet(Of tblSpisy)
    Public Property vwAD_BasicNonAccepted() As DbSet(Of vwAD_BasicNonAccepted)
    Public Property tblUradyCiselniks() As DbSet(Of tblUradyCiselnik)

    Public Overridable Function sp_B3_DetailSpisu(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_DetailSpisu_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_DetailSpisu_Result)("sp_B3_DetailSpisu", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_DohodyOUhrade(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_DohodyOUhrade_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_DohodyOUhrade_Result)("sp_B3_DohodyOUhrade", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_Dokumentace(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_Dokumentace_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_Dokumentace_Result)("sp_B3_Dokumentace", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_HistorieDohod(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_HistorieDohod_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_HistorieDohod_Result)("sp_B3_HistorieDohod", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_HistorieSpisu(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_HistorieSpisu_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_HistorieSpisu_Result)("sp_B3_HistorieSpisu", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_Osoby(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_Osoby_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_Osoby_Result)("sp_B3_Osoby", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_OsobyAddress(iDSpisyOsoby As Nullable(Of Integer), iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyAddress_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyAddress_Result)("sp_B3_OsobyAddress", iDSpisyOsobyParameter, iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_OsobyAdresyDalsiOsobyDodelat(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyAdresyDalsiOsobyDodelat_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyAdresyDalsiOsobyDodelat_Result)("sp_B3_OsobyAdresyDalsiOsobyDodelat", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_B3_OsobyDalsiKontakt(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyDalsiKontakt_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyDalsiKontakt_Result)("sp_B3_OsobyDalsiKontakt", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_B3_OsobyEmail(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyEmail_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyEmail_Result)("sp_B3_OsobyEmail", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_B3_OsobyPhone(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyPhone_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyPhone_Result)("sp_B3_OsobyPhone", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_B3_OsobyZam(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyZam_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyZam_Result)("sp_B3_OsobyZam", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_B3_PlatbyDoslePo1OSN(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_PlatbyDoslePo1OSN_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_PlatbyDoslePo1OSN_Result)("sp_B3_PlatbyDoslePo1OSN", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_PlatbyDoslePred1OSN(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_PlatbyDoslePred1OSN_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_PlatbyDoslePred1OSN_Result)("sp_B3_PlatbyDoslePred1OSN", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_SpisyDluznika(iDSpisyOsoby As Nullable(Of Integer), iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_B3_SpisyDluznika_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_SpisyDluznika_Result)("sp_B3_SpisyDluznika", iDSpisyOsobyParameter, iDUserParameter)
    End Function

    Public Overridable Function sp_Do_AddCommentForCase(iDspisu As Nullable(Of Integer), commentType As String, commentTxt As String) As Integer
        Dim iDspisuParameter As ObjectParameter = If(iDspisu.HasValue, New ObjectParameter("IDspisu", iDspisu), New ObjectParameter("IDspisu", GetType(Integer)))

        Dim commentTypeParameter As ObjectParameter = If(commentType IsNot Nothing, New ObjectParameter("CommentType", commentType), New ObjectParameter("CommentType", GetType(String)))

        Dim commentTxtParameter As ObjectParameter = If(commentTxt IsNot Nothing, New ObjectParameter("CommentTxt", commentTxt), New ObjectParameter("CommentTxt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddCommentForCase", iDspisuParameter, commentTypeParameter, commentTxtParameter)
    End Function

    Public Overridable Function sp_Do_AddUrgency(iDSpisu As Nullable(Of Integer), iDuser As Nullable(Of Integer), rr_Urgency As Nullable(Of Short), urgencyForSupervisor As Nullable(Of Boolean), validForState As Nullable(Of Short), calledFrom As String) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDuserParameter As ObjectParameter = If(iDuser.HasValue, New ObjectParameter("IDuser", iDuser), New ObjectParameter("IDuser", GetType(Integer)))

        Dim rr_UrgencyParameter As ObjectParameter = If(rr_Urgency.HasValue, New ObjectParameter("rr_Urgency", rr_Urgency), New ObjectParameter("rr_Urgency", GetType(Short)))

        Dim urgencyForSupervisorParameter As ObjectParameter = If(urgencyForSupervisor.HasValue, New ObjectParameter("UrgencyForSupervisor", urgencyForSupervisor), New ObjectParameter("UrgencyForSupervisor", GetType(Boolean)))

        Dim validForStateParameter As ObjectParameter = If(validForState.HasValue, New ObjectParameter("ValidForState", validForState), New ObjectParameter("ValidForState", GetType(Short)))

        Dim calledFromParameter As ObjectParameter = If(calledFrom IsNot Nothing, New ObjectParameter("CalledFrom", calledFrom), New ObjectParameter("CalledFrom", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddUrgency", iDSpisuParameter, iDuserParameter, rr_UrgencyParameter, urgencyForSupervisorParameter, validForStateParameter, calledFromParameter)
    End Function

    Public Overridable Function sp_Do_DoneOneReminder(iDReminder As Nullable(Of Integer)) As Integer
        Dim iDReminderParameter As ObjectParameter = If(iDReminder.HasValue, New ObjectParameter("IDReminder", iDReminder), New ObjectParameter("IDReminder", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_DoneOneReminder", iDReminderParameter)
    End Function

    Public Overridable Function sp_Do_EraseVisitDatePlan(iDSpisu As Nullable(Of Integer)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_EraseVisitDatePlan", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Do_ChangeAddressForItinerary(iDSpisyOsobyAdresy As Nullable(Of Integer)) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeAddressForItinerary", iDSpisyOsobyAdresyParameter)
    End Function

    Public Overridable Function sp_dropdiagram(diagramname As String, owner_id As Nullable(Of Integer)) As Integer
        Dim diagramnameParameter As ObjectParameter = If(diagramname IsNot Nothing, New ObjectParameter("diagramname", diagramname), New ObjectParameter("diagramname", GetType(String)))

        Dim owner_idParameter As ObjectParameter = If(owner_id.HasValue, New ObjectParameter("owner_id", owner_id), New ObjectParameter("owner_id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter)
    End Function

    Public Overridable Function sp_Get_CreditorDetail(iDSpisyOsoby As Nullable(Of Integer), zalozka As String) As ObjectResult(Of sp_Get_CreditorDetail_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim zalozkaParameter As ObjectParameter = If(zalozka IsNot Nothing, New ObjectParameter("Zalozka", zalozka), New ObjectParameter("Zalozka", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_CreditorDetail_Result)("sp_Get_CreditorDetail", iDSpisyOsobyParameter, zalozkaParameter)
    End Function

    Public Overridable Function sp_Get_ListOfOtherCase(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get_ListOfOtherCase_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_ListOfOtherCase_Result)("sp_Get_ListOfOtherCase", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Get_VisitDatePlan(iDSpisu As Nullable(Of Integer), iDSpisyOsobyAdresy As ObjectParameter, visitDatePlan As ObjectParameter, visitDatePlanNoChange As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_VisitDatePlan", iDSpisuParameter, iDSpisyOsobyAdresy, visitDatePlan, visitDatePlanNoChange)
    End Function

    Public Overridable Function sp_IsFVisitOtherPlaned(iDSpisu As Nullable(Of Integer), iDUser As Nullable(Of Integer)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_IsFVisitOtherPlaned", iDSpisuParameter, iDUserParameter)
    End Function

    Public Overridable Function sp_PlanedFVisitNearTime(iDUser As Nullable(Of Integer), dmax As Nullable(Of Date)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim dmaxParameter As ObjectParameter = If(dmax.HasValue, New ObjectParameter("Dmax", dmax), New ObjectParameter("Dmax", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_PlanedFVisitNearTime", iDUserParameter, dmaxParameter)
    End Function

    Public Overridable Function sp_ReminderAdd(iDUser As Nullable(Of Integer), reminderJobForUID As Nullable(Of Integer), reminderDeadline As Nullable(Of Date), reminderSubject As String, reminderTxt As String, iDSpisu As Nullable(Of Integer), iDSpisyOsoby As Nullable(Of Integer), awaitAnswer As Nullable(Of Boolean)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim reminderJobForUIDParameter As ObjectParameter = If(reminderJobForUID.HasValue, New ObjectParameter("ReminderJobForUID", reminderJobForUID), New ObjectParameter("ReminderJobForUID", GetType(Integer)))

        Dim reminderDeadlineParameter As ObjectParameter = If(reminderDeadline.HasValue, New ObjectParameter("ReminderDeadline", reminderDeadline), New ObjectParameter("ReminderDeadline", GetType(Date)))

        Dim reminderSubjectParameter As ObjectParameter = If(reminderSubject IsNot Nothing, New ObjectParameter("ReminderSubject", reminderSubject), New ObjectParameter("ReminderSubject", GetType(String)))

        Dim reminderTxtParameter As ObjectParameter = If(reminderTxt IsNot Nothing, New ObjectParameter("ReminderTxt", reminderTxt), New ObjectParameter("ReminderTxt", GetType(String)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim awaitAnswerParameter As ObjectParameter = If(awaitAnswer.HasValue, New ObjectParameter("AwaitAnswer", awaitAnswer), New ObjectParameter("AwaitAnswer", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ReminderAdd", iDUserParameter, reminderJobForUIDParameter, reminderDeadlineParameter, reminderSubjectParameter, reminderTxtParameter, iDSpisuParameter, iDSpisyOsobyParameter, awaitAnswerParameter)
    End Function

    Public Overridable Function sp_Run_10to11(iDSpisu As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_10to11", iDSpisuParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_11to12() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_11to12")
    End Function

    Public Overridable Function sp_Run_11to20(iDSpisu As Nullable(Of Integer), recordCommentType As String, recordCommentTxt As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim recordCommentTypeParameter As ObjectParameter = If(recordCommentType IsNot Nothing, New ObjectParameter("RecordCommentType", recordCommentType), New ObjectParameter("RecordCommentType", GetType(String)))

        Dim recordCommentTxtParameter As ObjectParameter = If(recordCommentTxt IsNot Nothing, New ObjectParameter("RecordCommentTxt", recordCommentTxt), New ObjectParameter("RecordCommentTxt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_11to20", iDSpisuParameter, recordCommentTypeParameter, recordCommentTxtParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_11to30(iDSpisu As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_11to30", iDSpisuParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_30to31(iDSpisu As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_30to31", iDSpisuParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_30to32() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_30to32")
    End Function

    Public Overridable Function sp_Run_30to5x(iDUser As Nullable(Of Integer), iDspisu As Nullable(Of Integer), rr_CaseNextActivity As Nullable(Of Short), reminderDeadline As Nullable(Of Date), caseNextActivityComment As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDspisuParameter As ObjectParameter = If(iDspisu.HasValue, New ObjectParameter("IDspisu", iDspisu), New ObjectParameter("IDspisu", GetType(Integer)))

        Dim rr_CaseNextActivityParameter As ObjectParameter = If(rr_CaseNextActivity.HasValue, New ObjectParameter("rr_CaseNextActivity", rr_CaseNextActivity), New ObjectParameter("rr_CaseNextActivity", GetType(Short)))

        Dim reminderDeadlineParameter As ObjectParameter = If(reminderDeadline.HasValue, New ObjectParameter("ReminderDeadline", reminderDeadline), New ObjectParameter("ReminderDeadline", GetType(Date)))

        Dim caseNextActivityCommentParameter As ObjectParameter = If(caseNextActivityComment IsNot Nothing, New ObjectParameter("CaseNextActivityComment", caseNextActivityComment), New ObjectParameter("CaseNextActivityComment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_30to5x", iDUserParameter, iDspisuParameter, rr_CaseNextActivityParameter, reminderDeadlineParameter, caseNextActivityCommentParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_4xto30(iDSpisu As Nullable(Of Integer), comment As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_4xto30", iDSpisuParameter, commentParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_5xto30(iDSpisu As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_5xto30", iDSpisuParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_61to60(iDSpisu As Nullable(Of Integer), lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_61to60", iDSpisuParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_xxto61(iDSpisu As Nullable(Of Integer), iDUser As Nullable(Of Integer), rr_ClosedFile As Nullable(Of Short), comment As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim rr_ClosedFileParameter As ObjectParameter = If(rr_ClosedFile.HasValue, New ObjectParameter("rr_ClosedFile", rr_ClosedFile), New ObjectParameter("rr_ClosedFile", GetType(Short)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_xxto61", iDSpisuParameter, iDUserParameter, rr_ClosedFileParameter, commentParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Run_xxtoDateFV(iDSpisu As Nullable(Of Integer), dateForFieldVisit As Nullable(Of Date), xboxVisitDatePlanNoChange As Nullable(Of Boolean), campName As String, cnt As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim dateForFieldVisitParameter As ObjectParameter = If(dateForFieldVisit.HasValue, New ObjectParameter("DateForFieldVisit", dateForFieldVisit), New ObjectParameter("DateForFieldVisit", GetType(Date)))

        Dim xboxVisitDatePlanNoChangeParameter As ObjectParameter = If(xboxVisitDatePlanNoChange.HasValue, New ObjectParameter("xboxVisitDatePlanNoChange", xboxVisitDatePlanNoChange), New ObjectParameter("xboxVisitDatePlanNoChange", GetType(Boolean)))

        Dim campNameParameter As ObjectParameter = If(campName IsNot Nothing, New ObjectParameter("CampName", campName), New ObjectParameter("CampName", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_xxtoDateFV", iDSpisuParameter, dateForFieldVisitParameter, xboxVisitDatePlanNoChangeParameter, campNameParameter, cnt, lL_LastLapse)
    End Function

    Public Overridable Function sp_RunJ_NewFiles() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_RunJ_NewFiles")
    End Function

    Public Overridable Function sp_UtilsForTest_01_HoditSpisyDoStavu10() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_UtilsForTest_01_HoditSpisyDoStavu10")
    End Function

    Public Overridable Function sp_UtilsForTest_02_SimulovatJobPriPrijetiSpisu() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_UtilsForTest_02_SimulovatJobPriPrijetiSpisu")
    End Function

    Public Overridable Function sp_UtilsForTest_40_SimulovatPovyseniDoDohodySK() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_UtilsForTest_40_SimulovatPovyseniDoDohodySK")
    End Function

    Public Overridable Function sp_B3_SpecifikaceDluhuVeritel(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_SpecifikaceDluhuVeritel_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_SpecifikaceDluhuVeritel_Result)("sp_B3_SpecifikaceDluhuVeritel", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_TerminyOSN(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_TerminyOSN_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_TerminyOSN_Result)("sp_B3_TerminyOSN", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Do_SetVisitDatePlanNoChange(iDSpisu As Nullable(Of Integer), visitDatePlanNoChange As Nullable(Of Boolean)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim visitDatePlanNoChangeParameter As ObjectParameter = If(visitDatePlanNoChange.HasValue, New ObjectParameter("VisitDatePlanNoChange", visitDatePlanNoChange), New ObjectParameter("VisitDatePlanNoChange", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_SetVisitDatePlanNoChange", iDSpisuParameter, visitDatePlanNoChangeParameter)
    End Function

    Public Overridable Function sp_B3_OsobyRole(iDSpisy As Nullable(Of Integer), iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OsobyRole_Result)
        Dim iDSpisyParameter As ObjectParameter = If(iDSpisy.HasValue, New ObjectParameter("IDSpisy", iDSpisy), New ObjectParameter("IDSpisy", GetType(Integer)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OsobyRole_Result)("sp_B3_OsobyRole", iDSpisyParameter, iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Get_FieldVisitReader(iDSpisu As Nullable(Of Integer), iDUser As Nullable(Of Integer), msgError As ObjectParameter, msgType As ObjectParameter) As ObjectResult(Of sp_Get_FieldVisitReader_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FieldVisitReader_Result)("sp_Get_FieldVisitReader", iDSpisuParameter, iDUserParameter, msgError, msgType)
    End Function

    Public Overridable Function sp_Get_FieldVisitObject(iDUser As Nullable(Of Integer), iDSpisu As ObjectParameter, rr_IDFVProcess As ObjectParameter, previousMasterResult As String, command As Nullable(Of Byte), returnValue As ObjectParameter, aCC As ObjectParameter, iDSpisyOsoby As ObjectParameter, sumTxt As ObjectParameter) As ObjectResult(Of sp_Get_FieldVisitObject_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim previousMasterResultParameter As ObjectParameter = If(previousMasterResult IsNot Nothing, New ObjectParameter("PreviousMasterResult", previousMasterResult), New ObjectParameter("PreviousMasterResult", GetType(String)))

        Dim commandParameter As ObjectParameter = If(command.HasValue, New ObjectParameter("Command", command), New ObjectParameter("Command", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FieldVisitObject_Result)("sp_Get_FieldVisitObject", iDUserParameter, iDSpisu, rr_IDFVProcess, previousMasterResultParameter, commandParameter, returnValue, aCC, iDSpisyOsoby, sumTxt)
    End Function

    Public Overridable Function sp_B3_SpecifikaceDluhuFinUdaje(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_SpecifikaceDluhuFinUdaje_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_SpecifikaceDluhuFinUdaje_Result)("sp_B3_SpecifikaceDluhuFinUdaje", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Get_DebitorDetailSmall(iDSpisu As Nullable(Of Integer), fullName As ObjectParameter, aCC As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_DebitorDetailSmall", iDSpisuParameter, fullName, aCC)
    End Function

    Public Overridable Function sp_Get2_Addresses(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get2_Addresses_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get2_Addresses_Result)("sp_Get2_Addresses", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Do_ChangeAddrForItinerary(tbl As Nullable(Of Byte), iDAddress As Nullable(Of Integer), iDSpisu As Nullable(Of Integer), gPSLat As String, gPSLng As String, gPSValid As Nullable(Of Boolean), oK As ObjectParameter, msg As ObjectParameter) As Integer
        Dim tblParameter As ObjectParameter = If(tbl.HasValue, New ObjectParameter("tbl", tbl), New ObjectParameter("tbl", GetType(Byte)))

        Dim iDAddressParameter As ObjectParameter = If(iDAddress.HasValue, New ObjectParameter("IDAddress", iDAddress), New ObjectParameter("IDAddress", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim gPSLatParameter As ObjectParameter = If(gPSLat IsNot Nothing, New ObjectParameter("GPSLat", gPSLat), New ObjectParameter("GPSLat", GetType(String)))

        Dim gPSLngParameter As ObjectParameter = If(gPSLng IsNot Nothing, New ObjectParameter("GPSLng", gPSLng), New ObjectParameter("GPSLng", GetType(String)))

        Dim gPSValidParameter As ObjectParameter = If(gPSValid.HasValue, New ObjectParameter("GPSValid", gPSValid), New ObjectParameter("GPSValid", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeAddrForItinerary", tblParameter, iDAddressParameter, iDSpisuParameter, gPSLatParameter, gPSLngParameter, gPSValidParameter, oK, msg)
    End Function

    Public Overridable Function sp_Get_RFV_NonReported(iDspisu As Nullable(Of Integer), iDSpisyOsoby As Nullable(Of Integer), iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_RFV_NonReported_Result)
        Dim iDspisuParameter As ObjectParameter = If(iDspisu.HasValue, New ObjectParameter("IDspisu", iDspisu), New ObjectParameter("IDspisu", GetType(Integer)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_RFV_NonReported_Result)("sp_Get_RFV_NonReported", iDspisuParameter, iDSpisyOsobyParameter, iDUserParameter)
    End Function

    Public Overridable Function sp_Do_RFV_HeadIsFinished(iDSpisu As Nullable(Of Integer), iDUser As Nullable(Of Integer)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_RFV_HeadIsFinished", iDSpisuParameter, iDUserParameter)
    End Function

    Public Overridable Function sp_B3_OtherInfo(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_OtherInfo_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_OtherInfo_Result)("sp_B3_OtherInfo", iDSpisuParameter)
    End Function

    Public Overridable Function sp_B3_Bonita(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_B3_Bonita_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_Bonita_Result)("sp_B3_Bonita", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Rec_Object_3137_17_Extra(iDUser As Nullable(Of Integer), iDSpisu As Nullable(Of Integer), dateNextPayment As Nullable(Of Date), rEM_Comment As String, iDSpisyOsoby As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim dateNextPaymentParameter As ObjectParameter = If(dateNextPayment.HasValue, New ObjectParameter("DateNextPayment", dateNextPayment), New ObjectParameter("DateNextPayment", GetType(Date)))

        Dim rEM_CommentParameter As ObjectParameter = If(rEM_Comment IsNot Nothing, New ObjectParameter("REM_Comment", rEM_Comment), New ObjectParameter("REM_Comment", GetType(String)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Rec_Object_3137_17_Extra", iDUserParameter, iDSpisuParameter, dateNextPaymentParameter, rEM_CommentParameter, iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Get_GlobalFind(fIND As String, iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_GlobalFind_Result)
        Dim fINDParameter As ObjectParameter = If(fIND IsNot Nothing, New ObjectParameter("FIND", fIND), New ObjectParameter("FIND", GetType(String)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_GlobalFind_Result)("sp_Get_GlobalFind", fINDParameter, iDUserParameter)
    End Function

    Public Overridable Function sp_Get_FVOsoby(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get_FVOsoby_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FVOsoby_Result)("sp_Get_FVOsoby", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Get_FVOsobyAddress(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_Get_FVOsobyAddress_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FVOsobyAddress_Result)("sp_Get_FVOsobyAddress", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Get_FVOsobyEmail(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_Get_FVOsobyEmail_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FVOsobyEmail_Result)("sp_Get_FVOsobyEmail", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Get_FVOsobyPhone(iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_Get_FVOsobyPhone_Result)
        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FVOsobyPhone_Result)("sp_Get_FVOsobyPhone", iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Do_AddAttachmentForCase(iDSpisu As Nullable(Of Integer), iDuser As Nullable(Of Integer), rr_AttachmentType As Nullable(Of Short), attachmentTxt As String, attachmentFileName As String, attachmentPath As String, attachmentSize As Nullable(Of Single)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDuserParameter As ObjectParameter = If(iDuser.HasValue, New ObjectParameter("IDuser", iDuser), New ObjectParameter("IDuser", GetType(Integer)))

        Dim rr_AttachmentTypeParameter As ObjectParameter = If(rr_AttachmentType.HasValue, New ObjectParameter("rr_AttachmentType", rr_AttachmentType), New ObjectParameter("rr_AttachmentType", GetType(Short)))

        Dim attachmentTxtParameter As ObjectParameter = If(attachmentTxt IsNot Nothing, New ObjectParameter("AttachmentTxt", attachmentTxt), New ObjectParameter("AttachmentTxt", GetType(String)))

        Dim attachmentFileNameParameter As ObjectParameter = If(attachmentFileName IsNot Nothing, New ObjectParameter("AttachmentFileName", attachmentFileName), New ObjectParameter("AttachmentFileName", GetType(String)))

        Dim attachmentPathParameter As ObjectParameter = If(attachmentPath IsNot Nothing, New ObjectParameter("AttachmentPath", attachmentPath), New ObjectParameter("AttachmentPath", GetType(String)))

        Dim attachmentSizeParameter As ObjectParameter = If(attachmentSize.HasValue, New ObjectParameter("AttachmentSize", attachmentSize), New ObjectParameter("AttachmentSize", GetType(Single)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddAttachmentForCase", iDSpisuParameter, iDuserParameter, rr_AttachmentTypeParameter, attachmentTxtParameter, attachmentFileNameParameter, attachmentPathParameter, attachmentSizeParameter)
    End Function

    Public Overridable Function sp_Do_AddError(kde As String, erMsg As String) As Integer
        Dim kdeParameter As ObjectParameter = If(kde IsNot Nothing, New ObjectParameter("Kde", kde), New ObjectParameter("Kde", GetType(String)))

        Dim erMsgParameter As ObjectParameter = If(erMsg IsNot Nothing, New ObjectParameter("ErMsg", erMsg), New ObjectParameter("ErMsg", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddError", kdeParameter, erMsgParameter)
    End Function

    Public Overridable Function sp_Do_AddReminder(iDUser As Nullable(Of Integer), reminderJobForUID As Nullable(Of Integer), reminderDeadline As Nullable(Of Date), reminderSubject As String, reminderTxt As String, iDSpisu As Nullable(Of Integer), iDSpisyOsoby As Nullable(Of Integer), awaitAnswer As Nullable(Of Boolean), validForState As Nullable(Of Short)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim reminderJobForUIDParameter As ObjectParameter = If(reminderJobForUID.HasValue, New ObjectParameter("ReminderJobForUID", reminderJobForUID), New ObjectParameter("ReminderJobForUID", GetType(Integer)))

        Dim reminderDeadlineParameter As ObjectParameter = If(reminderDeadline.HasValue, New ObjectParameter("ReminderDeadline", reminderDeadline), New ObjectParameter("ReminderDeadline", GetType(Date)))

        Dim reminderSubjectParameter As ObjectParameter = If(reminderSubject IsNot Nothing, New ObjectParameter("ReminderSubject", reminderSubject), New ObjectParameter("ReminderSubject", GetType(String)))

        Dim reminderTxtParameter As ObjectParameter = If(reminderTxt IsNot Nothing, New ObjectParameter("ReminderTxt", reminderTxt), New ObjectParameter("ReminderTxt", GetType(String)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim awaitAnswerParameter As ObjectParameter = If(awaitAnswer.HasValue, New ObjectParameter("AwaitAnswer", awaitAnswer), New ObjectParameter("AwaitAnswer", GetType(Boolean)))

        Dim validForStateParameter As ObjectParameter = If(validForState.HasValue, New ObjectParameter("ValidForState", validForState), New ObjectParameter("ValidForState", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddReminder", iDUserParameter, reminderJobForUIDParameter, reminderDeadlineParameter, reminderSubjectParameter, reminderTxtParameter, iDSpisuParameter, iDSpisyOsobyParameter, awaitAnswerParameter, validForStateParameter)
    End Function

    Public Overridable Function sp_Do_DeleteReminder(iDSpisu As Nullable(Of Integer)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_DeleteReminder", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Do_ChangeAddrMain(iDSpisyOsobyAdresy As Nullable(Of Integer)) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeAddrMain", iDSpisyOsobyAdresyParameter)
    End Function

    Public Overridable Function sp_Do_ChangeAddrType(iDSpisyOsobyAdresy As Nullable(Of Integer), rr_AddressType As Nullable(Of Short)) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Dim rr_AddressTypeParameter As ObjectParameter = If(rr_AddressType.HasValue, New ObjectParameter("rr_AddressType", rr_AddressType), New ObjectParameter("rr_AddressType", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeAddrType", iDSpisyOsobyAdresyParameter, rr_AddressTypeParameter)
    End Function

    Public Overridable Function sp_Do_ChangeAddrValidity(iDSpisyOsobyAdresy As Nullable(Of Integer), rr_AddressValidity As Nullable(Of Short)) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Dim rr_AddressValidityParameter As ObjectParameter = If(rr_AddressValidity.HasValue, New ObjectParameter("rr_AddressValidity", rr_AddressValidity), New ObjectParameter("rr_AddressValidity", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeAddrValidity", iDSpisyOsobyAdresyParameter, rr_AddressValidityParameter)
    End Function

    Public Overridable Function sp_Do_ChangeAddrVisited(iDSpisyOsobyAdresy As Nullable(Of Integer), persAddressVisited As Nullable(Of Boolean)) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Dim persAddressVisitedParameter As ObjectParameter = If(persAddressVisited.HasValue, New ObjectParameter("PersAddressVisited", persAddressVisited), New ObjectParameter("PersAddressVisited", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeAddrVisited", iDSpisyOsobyAdresyParameter, persAddressVisitedParameter)
    End Function

    Public Overridable Function sp_Do_ChangeMailValidity(iDSpisyOsobyEmail As Nullable(Of Integer), persEmailValid As Nullable(Of Boolean)) As Integer
        Dim iDSpisyOsobyEmailParameter As ObjectParameter = If(iDSpisyOsobyEmail.HasValue, New ObjectParameter("IDSpisyOsobyEmail", iDSpisyOsobyEmail), New ObjectParameter("IDSpisyOsobyEmail", GetType(Integer)))

        Dim persEmailValidParameter As ObjectParameter = If(persEmailValid.HasValue, New ObjectParameter("PersEmailValid", persEmailValid), New ObjectParameter("PersEmailValid", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeMailValidity", iDSpisyOsobyEmailParameter, persEmailValidParameter)
    End Function

    Public Overridable Function sp_Do_ChangePhoneValidity(iDSpisyOsobyPhone As Nullable(Of Integer), rr_PhoneValidity As Nullable(Of Short)) As Integer
        Dim iDSpisyOsobyPhoneParameter As ObjectParameter = If(iDSpisyOsobyPhone.HasValue, New ObjectParameter("IDSpisyOsobyPhone", iDSpisyOsobyPhone), New ObjectParameter("IDSpisyOsobyPhone", GetType(Integer)))

        Dim rr_PhoneValidityParameter As ObjectParameter = If(rr_PhoneValidity.HasValue, New ObjectParameter("rr_PhoneValidity", rr_PhoneValidity), New ObjectParameter("rr_PhoneValidity", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangePhoneValidity", iDSpisyOsobyPhoneParameter, rr_PhoneValidityParameter)
    End Function

    Public Overridable Function sp_B3_ListAllFV(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_B3_ListAllFV_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_B3_ListAllFV_Result)("sp_B3_ListAllFV", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Get_AllAddressOfDebitor(iDSpisu As Nullable(Of Integer), countOfFV As ObjectParameter, firstVisitExecuted As ObjectParameter) As ObjectResult(Of sp_Get_AllAddressOfDebitor_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_AllAddressOfDebitor_Result)("sp_Get_AllAddressOfDebitor", iDSpisuParameter, countOfFV, firstVisitExecuted)
    End Function

    Public Overridable Function sp_Do_Super2_3_2_Radio1(iDSpisu As Nullable(Of Integer), comment As String, lastLapseMsg As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_2_Radio1", iDSpisuParameter, commentParameter, lastLapseMsg)
    End Function

    Public Overridable Function sp_Do_Super2_3_2_Radio2(iDSpisu As Nullable(Of Integer), comment1 As String, dMax As Nullable(Of Date)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim comment1Parameter As ObjectParameter = If(comment1 IsNot Nothing, New ObjectParameter("Comment1", comment1), New ObjectParameter("Comment1", GetType(String)))

        Dim dMaxParameter As ObjectParameter = If(dMax.HasValue, New ObjectParameter("DMax", dMax), New ObjectParameter("DMax", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_2_Radio2", iDSpisuParameter, comment1Parameter, dMaxParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_2_Radio3(iDSpisu As Nullable(Of Integer), iDUser As Nullable(Of Integer), comment1 As String, rr_CaseNextActivity As Nullable(Of Short), commentJine As String, datumDeadLine As Nullable(Of Date)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim comment1Parameter As ObjectParameter = If(comment1 IsNot Nothing, New ObjectParameter("Comment1", comment1), New ObjectParameter("Comment1", GetType(String)))

        Dim rr_CaseNextActivityParameter As ObjectParameter = If(rr_CaseNextActivity.HasValue, New ObjectParameter("rr_CaseNextActivity", rr_CaseNextActivity), New ObjectParameter("rr_CaseNextActivity", GetType(Short)))

        Dim commentJineParameter As ObjectParameter = If(commentJine IsNot Nothing, New ObjectParameter("CommentJine", commentJine), New ObjectParameter("CommentJine", GetType(String)))

        Dim datumDeadLineParameter As ObjectParameter = If(datumDeadLine.HasValue, New ObjectParameter("datumDeadLine", datumDeadLine), New ObjectParameter("datumDeadLine", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_2_Radio3", iDSpisuParameter, iDUserParameter, comment1Parameter, rr_CaseNextActivityParameter, commentJineParameter, datumDeadLineParameter)
    End Function

    Public Overridable Function sp_DSHB_1_1() As ObjectResult(Of sp_DSHB_1_1_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_1_Result)("sp_DSHB_1_1")
    End Function

    Public Overridable Function sp_DSHB_1_1_Detail() As ObjectResult(Of sp_DSHB_1_1_Detail_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_1_Detail_Result)("sp_DSHB_1_1_Detail")
    End Function

    Public Overridable Function sp_DSHB_1_4() As ObjectResult(Of sp_DSHB_1_4_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_4_Result)("sp_DSHB_1_4")
    End Function

    Public Overridable Function sp_DSHB_1_4_Detail(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_1_4_Detail_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_4_Detail_Result)("sp_DSHB_1_4_Detail", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_1_5() As ObjectResult(Of sp_DSHB_1_5_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_5_Result)("sp_DSHB_1_5")
    End Function

    Public Overridable Function sp_DSHB_1_6() As ObjectResult(Of sp_DSHB_1_6_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_6_Result)("sp_DSHB_1_6")
    End Function

    Public Overridable Function sp_DSHB_1_8() As ObjectResult(Of sp_DSHB_1_8_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_8_Result)("sp_DSHB_1_8")
    End Function

    Public Overridable Function sp_DSHB_1_8_Detail(iDOrder As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_1_8_Detail_Result)
        Dim iDOrderParameter As ObjectParameter = If(iDOrder.HasValue, New ObjectParameter("IDOrder", iDOrder), New ObjectParameter("IDOrder", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_8_Detail_Result)("sp_DSHB_1_8_Detail", iDOrderParameter)
    End Function

    Public Overridable Function sp_DSHB_1_9() As ObjectResult(Of sp_DSHB_1_9_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_9_Result)("sp_DSHB_1_9")
    End Function

    Public Overridable Function sp_DSHB_1_9_Detail_1() As ObjectResult(Of sp_DSHB_1_9_Detail_1_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_9_Detail_1_Result)("sp_DSHB_1_9_Detail_1")
    End Function

    Public Overridable Function sp_DSHB_1_9_Detail_2() As ObjectResult(Of sp_DSHB_1_9_Detail_2_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_9_Detail_2_Result)("sp_DSHB_1_9_Detail_2")
    End Function

    Public Overridable Function sp_Do_Super2_3_1(iDSpisu As Nullable(Of Integer), comment As String) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_1", iDSpisuParameter, commentParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_3_Radio1(iDSpisu As Nullable(Of Integer)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_3_Radio1", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_3_Radio2(iDSpisu As Nullable(Of Integer), comment As String) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_3_Radio2", iDSpisuParameter, commentParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_4(iDSpisu As Nullable(Of Integer), d1MAX As Nullable(Of Date), comment As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim d1MAXParameter As ObjectParameter = If(d1MAX.HasValue, New ObjectParameter("D1MAX", d1MAX), New ObjectParameter("D1MAX", GetType(Date)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_4", iDSpisuParameter, d1MAXParameter, commentParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Do_Super2_3_5(iDSpisu As Nullable(Of Integer), dNMAX As Nullable(Of Date), comment As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim dNMAXParameter As ObjectParameter = If(dNMAX.HasValue, New ObjectParameter("DNMAX", dNMAX), New ObjectParameter("DNMAX", GetType(Date)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_5", iDSpisuParameter, dNMAXParameter, commentParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Do_Super2_3_7_Case(iDUser_Inspector As Nullable(Of Integer), iDSpisu As Nullable(Of Integer), reminderDeadline As Nullable(Of Date), reminderSubject As String, reminderTxt As String) As Integer
        Dim iDUser_InspectorParameter As ObjectParameter = If(iDUser_Inspector.HasValue, New ObjectParameter("IDUser_Inspector", iDUser_Inspector), New ObjectParameter("IDUser_Inspector", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim reminderDeadlineParameter As ObjectParameter = If(reminderDeadline.HasValue, New ObjectParameter("ReminderDeadline", reminderDeadline), New ObjectParameter("ReminderDeadline", GetType(Date)))

        Dim reminderSubjectParameter As ObjectParameter = If(reminderSubject IsNot Nothing, New ObjectParameter("ReminderSubject", reminderSubject), New ObjectParameter("ReminderSubject", GetType(String)))

        Dim reminderTxtParameter As ObjectParameter = If(reminderTxt IsNot Nothing, New ObjectParameter("ReminderTxt", reminderTxt), New ObjectParameter("ReminderTxt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_7_Case", iDUser_InspectorParameter, iDSpisuParameter, reminderDeadlineParameter, reminderSubjectParameter, reminderTxtParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_7_Debitor(iDUser_Inspector As Nullable(Of Integer), iDSpisyOsoby As Nullable(Of Integer), reminderDeadline As Nullable(Of Date), reminderSubject As String, reminderTxt As String) As Integer
        Dim iDUser_InspectorParameter As ObjectParameter = If(iDUser_Inspector.HasValue, New ObjectParameter("IDUser_Inspector", iDUser_Inspector), New ObjectParameter("IDUser_Inspector", GetType(Integer)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim reminderDeadlineParameter As ObjectParameter = If(reminderDeadline.HasValue, New ObjectParameter("ReminderDeadline", reminderDeadline), New ObjectParameter("ReminderDeadline", GetType(Date)))

        Dim reminderSubjectParameter As ObjectParameter = If(reminderSubject IsNot Nothing, New ObjectParameter("ReminderSubject", reminderSubject), New ObjectParameter("ReminderSubject", GetType(String)))

        Dim reminderTxtParameter As ObjectParameter = If(reminderTxt IsNot Nothing, New ObjectParameter("ReminderTxt", reminderTxt), New ObjectParameter("ReminderTxt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_7_Debitor", iDUser_InspectorParameter, iDSpisyOsobyParameter, reminderDeadlineParameter, reminderSubjectParameter, reminderTxtParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_7_IP(iDUser_Inspector As Nullable(Of Integer), iDUser_ForIP As Nullable(Of Integer), reminderDeadline As Nullable(Of Date), reminderSubject As String, reminderTxt As String) As Integer
        Dim iDUser_InspectorParameter As ObjectParameter = If(iDUser_Inspector.HasValue, New ObjectParameter("IDUser_Inspector", iDUser_Inspector), New ObjectParameter("IDUser_Inspector", GetType(Integer)))

        Dim iDUser_ForIPParameter As ObjectParameter = If(iDUser_ForIP.HasValue, New ObjectParameter("IDUser_ForIP", iDUser_ForIP), New ObjectParameter("IDUser_ForIP", GetType(Integer)))

        Dim reminderDeadlineParameter As ObjectParameter = If(reminderDeadline.HasValue, New ObjectParameter("ReminderDeadline", reminderDeadline), New ObjectParameter("ReminderDeadline", GetType(Date)))

        Dim reminderSubjectParameter As ObjectParameter = If(reminderSubject IsNot Nothing, New ObjectParameter("ReminderSubject", reminderSubject), New ObjectParameter("ReminderSubject", GetType(String)))

        Dim reminderTxtParameter As ObjectParameter = If(reminderTxt IsNot Nothing, New ObjectParameter("ReminderTxt", reminderTxt), New ObjectParameter("ReminderTxt", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_7_IP", iDUser_InspectorParameter, iDUser_ForIPParameter, reminderDeadlineParameter, reminderSubjectParameter, reminderTxtParameter)
    End Function

    Public Overridable Function sp_DSHB_1_3() As ObjectResult(Of sp_DSHB_1_3_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_3_Result)("sp_DSHB_1_3")
    End Function

    Public Overridable Function sp_DSHB_1_2(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_1_2_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_2_Result)("sp_DSHB_1_2", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_FVAllPhonesOfCase(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get_FVAllPhonesOfCase_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FVAllPhonesOfCase_Result)("sp_Get_FVAllPhonesOfCase", iDSpisuParameter)
    End Function

    Public Overridable Function sp_DSHB_1_10() As ObjectResult(Of sp_DSHB_1_10_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_10_Result)("sp_DSHB_1_10")
    End Function

    Public Overridable Function sp_DSHB_1_13() As ObjectResult(Of sp_DSHB_1_13_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_13_Result)("sp_DSHB_1_13")
    End Function

    Public Overridable Function sp_DSHB_1_14() As ObjectResult(Of sp_DSHB_1_14_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_14_Result)("sp_DSHB_1_14")
    End Function

    Public Overridable Function sp_DSHB_1_14Detail1() As ObjectResult(Of sp_DSHB_1_14Detail1_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_14Detail1_Result)("sp_DSHB_1_14Detail1")
    End Function

    Public Overridable Function sp_DSHB_1_14Detail2() As ObjectResult(Of sp_DSHB_1_14Detail2_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_14Detail2_Result)("sp_DSHB_1_14Detail2")
    End Function

    Public Overridable Function sp_DSHB_1_14Detail3() As ObjectResult(Of sp_DSHB_1_14Detail3_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_14Detail3_Result)("sp_DSHB_1_14Detail3")
    End Function

    Public Overridable Function sp_DSHB_1_14Detail4() As ObjectResult(Of sp_DSHB_1_14Detail4_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_14Detail4_Result)("sp_DSHB_1_14Detail4")
    End Function

    Public Overridable Function sp_DSHB_1_1Fill() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_DSHB_1_1Fill")
    End Function

    Public Overridable Function sp_DSHB_1_2Fill(iDUser As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_DSHB_1_2Fill", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_1_7() As ObjectResult(Of sp_DSHB_1_7_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_7_Result)("sp_DSHB_1_7")
    End Function

    Public Overridable Function sp_DSHB_1_7Detail() As ObjectResult(Of sp_DSHB_1_7Detail_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_7Detail_Result)("sp_DSHB_1_7Detail")
    End Function

    Public Overridable Function sp_DSHB_1_8Fill() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_DSHB_1_8Fill")
    End Function

    Public Overridable Function sp_DSHB_1_9Fill() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_DSHB_1_9Fill")
    End Function

    Public Overridable Function sp_Do_AddUserLogin(iDUser As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddUserLogin", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_1_7_Detail() As ObjectResult(Of sp_DSHB_1_7_Detail_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_7_Detail_Result)("sp_DSHB_1_7_Detail")
    End Function

    Public Overridable Function sp_DSHB_1_10_Detail(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_1_10_Detail_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_10_Detail_Result)("sp_DSHB_1_10_Detail", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_1_13_Detail() As ObjectResult(Of sp_DSHB_1_13_Detail_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_13_Detail_Result)("sp_DSHB_1_13_Detail")
    End Function

    Public Overridable Function sp_DSHB_LastFill() As ObjectResult(Of String)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_DSHB_LastFill")
    End Function

    Public Overridable Function sp_DSHB_Fill() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_DSHB_Fill")
    End Function

    Public Overridable Function sp_Run_6xto62(iDSpisu As Nullable(Of Integer), comment As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_6xto62", iDSpisuParameter, commentParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_DSHB_1_3_Detail(poradi As Nullable(Of Short)) As ObjectResult(Of sp_DSHB_1_3_Detail_Result)
        Dim poradiParameter As ObjectParameter = If(poradi.HasValue, New ObjectParameter("Poradi", poradi), New ObjectParameter("Poradi", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_1_3_Detail_Result)("sp_DSHB_1_3_Detail", poradiParameter)
    End Function

    Public Overridable Function sp_Get_FVAllEmailsOfCase(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get_FVAllEmailsOfCase_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_FVAllEmailsOfCase_Result)("sp_Get_FVAllEmailsOfCase", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Rec_Object_54_1_Extra(iDUser As Nullable(Of Integer), iDSpisu As Nullable(Of Integer), dateNextPayment As Nullable(Of Date), rEM_Comment As String, reminderSubject As String, iDSpisyOsoby As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim dateNextPaymentParameter As ObjectParameter = If(dateNextPayment.HasValue, New ObjectParameter("DateNextPayment", dateNextPayment), New ObjectParameter("DateNextPayment", GetType(Date)))

        Dim rEM_CommentParameter As ObjectParameter = If(rEM_Comment IsNot Nothing, New ObjectParameter("REM_Comment", rEM_Comment), New ObjectParameter("REM_Comment", GetType(String)))

        Dim reminderSubjectParameter As ObjectParameter = If(reminderSubject IsNot Nothing, New ObjectParameter("ReminderSubject", reminderSubject), New ObjectParameter("ReminderSubject", GetType(String)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Rec_Object_54_1_Extra", iDUserParameter, iDSpisuParameter, dateNextPaymentParameter, rEM_CommentParameter, reminderSubjectParameter, iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Rec_Object_81_Extra(iDUser As Nullable(Of Integer), iDSpisu As Nullable(Of Integer), comment As String) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Rec_Object_81_Extra", iDUserParameter, iDSpisuParameter, commentParameter)
    End Function

    Public Overridable Function sp_Rec_Start8(iDUser As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Rec_Start8", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_01(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_01_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_01_Result)("sp_DSHB_10_01", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_02(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_02_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_02_Result)("sp_DSHB_10_02", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_03(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_03_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_03_Result)("sp_DSHB_10_03", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_04(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_04_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_04_Result)("sp_DSHB_10_04", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_07(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_07_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_07_Result)("sp_DSHB_10_07", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_08(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_08_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_08_Result)("sp_DSHB_10_08", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_10_09(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_09_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_09_Result)("sp_DSHB_10_09", iDUserParameter)
    End Function

    Public Overridable Function sp_Get2_Osoby(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get2_Osoby_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get2_Osoby_Result)("sp_Get2_Osoby", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Rec_Start52_Extra(iDUser As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Rec_Start52_Extra", iDUserParameter)
    End Function

    Public Overridable Function sp_Do_AddCampMemberNew(iDCampaign As Nullable(Of Integer), iDSpisyOsobyAdresy As Nullable(Of Integer), rr_CampAddrType As Nullable(Of Byte), iDCampMember As ObjectParameter) As Integer
        Dim iDCampaignParameter As ObjectParameter = If(iDCampaign.HasValue, New ObjectParameter("IDCampaign", iDCampaign), New ObjectParameter("IDCampaign", GetType(Integer)))

        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Dim rr_CampAddrTypeParameter As ObjectParameter = If(rr_CampAddrType.HasValue, New ObjectParameter("rr_CampAddrType", rr_CampAddrType), New ObjectParameter("rr_CampAddrType", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddCampMemberNew", iDCampaignParameter, iDSpisyOsobyAdresyParameter, rr_CampAddrTypeParameter, iDCampMember)
    End Function

    Public Overridable Function sp_Do_AddCampMember(iDUser As Nullable(Of Integer), iDSpisyOsobyAdresy As Nullable(Of Integer), rr_CampAddrType As Nullable(Of Byte), visitDatePlan As Nullable(Of Date), newPosition As Nullable(Of Short), campName As String, cnt As ObjectParameter, iDCampMember As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Dim rr_CampAddrTypeParameter As ObjectParameter = If(rr_CampAddrType.HasValue, New ObjectParameter("rr_CampAddrType", rr_CampAddrType), New ObjectParameter("rr_CampAddrType", GetType(Byte)))

        Dim visitDatePlanParameter As ObjectParameter = If(visitDatePlan.HasValue, New ObjectParameter("VisitDatePlan", visitDatePlan), New ObjectParameter("VisitDatePlan", GetType(Date)))

        Dim newPositionParameter As ObjectParameter = If(newPosition.HasValue, New ObjectParameter("NewPosition", newPosition), New ObjectParameter("NewPosition", GetType(Short)))

        Dim campNameParameter As ObjectParameter = If(campName IsNot Nothing, New ObjectParameter("CampName", campName), New ObjectParameter("CampName", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddCampMember", iDUserParameter, iDSpisyOsobyAdresyParameter, rr_CampAddrTypeParameter, visitDatePlanParameter, newPositionParameter, campNameParameter, cnt, iDCampMember)
    End Function

    Public Overridable Function sp_Do_ChangeCampOrder(iDCampMember As Nullable(Of Integer), newPosition As Nullable(Of Short)) As Integer
        Dim iDCampMemberParameter As ObjectParameter = If(iDCampMember.HasValue, New ObjectParameter("IDCampMember", iDCampMember), New ObjectParameter("IDCampMember", GetType(Integer)))

        Dim newPositionParameter As ObjectParameter = If(newPosition.HasValue, New ObjectParameter("NewPosition", newPosition), New ObjectParameter("NewPosition", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeCampOrder", iDCampMemberParameter, newPositionParameter)
    End Function

    Public Overridable Function sp_Get_IDSpisu_OfIDSpisyOsobyAdresy(iDSpisyOsobyAdresy As Nullable(Of Integer), iDSpisu As ObjectParameter) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_IDSpisu_OfIDSpisyOsobyAdresy", iDSpisyOsobyAdresyParameter, iDSpisu)
    End Function

    Public Overridable Function sp_Do_DeleteCampMember(iDCampMember As Nullable(Of Integer), dateForFieldVisit As Nullable(Of Date), xboxVisitDatePlanNoChange As Nullable(Of Boolean), cnt As ObjectParameter, lL_LastLapse As ObjectParameter) As Integer
        Dim iDCampMemberParameter As ObjectParameter = If(iDCampMember.HasValue, New ObjectParameter("IDCampMember", iDCampMember), New ObjectParameter("IDCampMember", GetType(Integer)))

        Dim dateForFieldVisitParameter As ObjectParameter = If(dateForFieldVisit.HasValue, New ObjectParameter("DateForFieldVisit", dateForFieldVisit), New ObjectParameter("DateForFieldVisit", GetType(Date)))

        Dim xboxVisitDatePlanNoChangeParameter As ObjectParameter = If(xboxVisitDatePlanNoChange.HasValue, New ObjectParameter("xboxVisitDatePlanNoChange", xboxVisitDatePlanNoChange), New ObjectParameter("xboxVisitDatePlanNoChange", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_DeleteCampMember", iDCampMemberParameter, dateForFieldVisitParameter, xboxVisitDatePlanNoChangeParameter, cnt, lL_LastLapse)
    End Function

    Public Overridable Function sp_CampAddrALL(iDUser As Nullable(Of Integer), type As Nullable(Of Byte), vzdalenostKm As Nullable(Of Byte)) As ObjectResult(Of sp_CampAddrALL_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim typeParameter As ObjectParameter = If(type.HasValue, New ObjectParameter("Type", type), New ObjectParameter("Type", GetType(Byte)))

        Dim vzdalenostKmParameter As ObjectParameter = If(vzdalenostKm.HasValue, New ObjectParameter("VzdalenostKm", vzdalenostKm), New ObjectParameter("VzdalenostKm", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_CampAddrALL_Result)("sp_CampAddrALL", iDUserParameter, typeParameter, vzdalenostKmParameter)
    End Function

    Public Overridable Function sp_Do_ChangeCampOrderOnlyOne(iDCampMember As Nullable(Of Integer), newPosition As Nullable(Of Short)) As Integer
        Dim iDCampMemberParameter As ObjectParameter = If(iDCampMember.HasValue, New ObjectParameter("IDCampMember", iDCampMember), New ObjectParameter("IDCampMember", GetType(Integer)))

        Dim newPositionParameter As ObjectParameter = If(newPosition.HasValue, New ObjectParameter("NewPosition", newPosition), New ObjectParameter("NewPosition", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeCampOrderOnlyOne", iDCampMemberParameter, newPositionParameter)
    End Function

    Public Overridable Function sp_Get_MinDMAX_OfIDSpisyOsobyAdresy(iDSpisyOsobyAdresy As Nullable(Of Integer), minDMAX As ObjectParameter, visitDatePlanNoChange As ObjectParameter) As Integer
        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_MinDMAX_OfIDSpisyOsobyAdresy", iDSpisyOsobyAdresyParameter, minDMAX, visitDatePlanNoChange)
    End Function

    Public Overridable Function sp_Do_AddExternalAddress(iDUser As Nullable(Of Integer), extAddrName As String, extAddrStreet As String, extAddrHouseNum As String, extAddrZipCode As String, extAddrCity As String, gPSLat As String, gPSLng As String, gPSValid As Nullable(Of Boolean), extAddrComment As String, iDExternalAddress As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim extAddrNameParameter As ObjectParameter = If(extAddrName IsNot Nothing, New ObjectParameter("ExtAddrName", extAddrName), New ObjectParameter("ExtAddrName", GetType(String)))

        Dim extAddrStreetParameter As ObjectParameter = If(extAddrStreet IsNot Nothing, New ObjectParameter("ExtAddrStreet", extAddrStreet), New ObjectParameter("ExtAddrStreet", GetType(String)))

        Dim extAddrHouseNumParameter As ObjectParameter = If(extAddrHouseNum IsNot Nothing, New ObjectParameter("ExtAddrHouseNum", extAddrHouseNum), New ObjectParameter("ExtAddrHouseNum", GetType(String)))

        Dim extAddrZipCodeParameter As ObjectParameter = If(extAddrZipCode IsNot Nothing, New ObjectParameter("ExtAddrZipCode", extAddrZipCode), New ObjectParameter("ExtAddrZipCode", GetType(String)))

        Dim extAddrCityParameter As ObjectParameter = If(extAddrCity IsNot Nothing, New ObjectParameter("ExtAddrCity", extAddrCity), New ObjectParameter("ExtAddrCity", GetType(String)))

        Dim gPSLatParameter As ObjectParameter = If(gPSLat IsNot Nothing, New ObjectParameter("GPSLat", gPSLat), New ObjectParameter("GPSLat", GetType(String)))

        Dim gPSLngParameter As ObjectParameter = If(gPSLng IsNot Nothing, New ObjectParameter("GPSLng", gPSLng), New ObjectParameter("GPSLng", GetType(String)))

        Dim gPSValidParameter As ObjectParameter = If(gPSValid.HasValue, New ObjectParameter("GPSValid", gPSValid), New ObjectParameter("GPSValid", GetType(Boolean)))

        Dim extAddrCommentParameter As ObjectParameter = If(extAddrComment IsNot Nothing, New ObjectParameter("ExtAddrComment", extAddrComment), New ObjectParameter("ExtAddrComment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddExternalAddress", iDUserParameter, extAddrNameParameter, extAddrStreetParameter, extAddrHouseNumParameter, extAddrZipCodeParameter, extAddrCityParameter, gPSLatParameter, gPSLngParameter, gPSValidParameter, extAddrCommentParameter, iDExternalAddress)
    End Function

    Public Overridable Function sp_Do_DeleteExternalAddress(iDExternalAddress As Nullable(Of Integer)) As Integer
        Dim iDExternalAddressParameter As ObjectParameter = If(iDExternalAddress.HasValue, New ObjectParameter("IDExternalAddress", iDExternalAddress), New ObjectParameter("IDExternalAddress", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_DeleteExternalAddress", iDExternalAddressParameter)
    End Function

    Public Overridable Function sp_Do_EditExternalAddress(iDExternalAddress As Nullable(Of Integer), extAddrName As String, extAddrStreet As String, extAddrHouseNum As String, extAddrZipCode As String, extAddrCity As String, extAddrRegion As String, gPSLat As String, gPSLng As String, gPSValid As Nullable(Of Boolean), extAddrComment As String) As Integer
        Dim iDExternalAddressParameter As ObjectParameter = If(iDExternalAddress.HasValue, New ObjectParameter("IDExternalAddress", iDExternalAddress), New ObjectParameter("IDExternalAddress", GetType(Integer)))

        Dim extAddrNameParameter As ObjectParameter = If(extAddrName IsNot Nothing, New ObjectParameter("ExtAddrName", extAddrName), New ObjectParameter("ExtAddrName", GetType(String)))

        Dim extAddrStreetParameter As ObjectParameter = If(extAddrStreet IsNot Nothing, New ObjectParameter("ExtAddrStreet", extAddrStreet), New ObjectParameter("ExtAddrStreet", GetType(String)))

        Dim extAddrHouseNumParameter As ObjectParameter = If(extAddrHouseNum IsNot Nothing, New ObjectParameter("ExtAddrHouseNum", extAddrHouseNum), New ObjectParameter("ExtAddrHouseNum", GetType(String)))

        Dim extAddrZipCodeParameter As ObjectParameter = If(extAddrZipCode IsNot Nothing, New ObjectParameter("ExtAddrZipCode", extAddrZipCode), New ObjectParameter("ExtAddrZipCode", GetType(String)))

        Dim extAddrCityParameter As ObjectParameter = If(extAddrCity IsNot Nothing, New ObjectParameter("ExtAddrCity", extAddrCity), New ObjectParameter("ExtAddrCity", GetType(String)))

        Dim extAddrRegionParameter As ObjectParameter = If(extAddrRegion IsNot Nothing, New ObjectParameter("ExtAddrRegion", extAddrRegion), New ObjectParameter("ExtAddrRegion", GetType(String)))

        Dim gPSLatParameter As ObjectParameter = If(gPSLat IsNot Nothing, New ObjectParameter("GPSLat", gPSLat), New ObjectParameter("GPSLat", GetType(String)))

        Dim gPSLngParameter As ObjectParameter = If(gPSLng IsNot Nothing, New ObjectParameter("GPSLng", gPSLng), New ObjectParameter("GPSLng", GetType(String)))

        Dim gPSValidParameter As ObjectParameter = If(gPSValid.HasValue, New ObjectParameter("GPSValid", gPSValid), New ObjectParameter("GPSValid", GetType(Boolean)))

        Dim extAddrCommentParameter As ObjectParameter = If(extAddrComment IsNot Nothing, New ObjectParameter("ExtAddrComment", extAddrComment), New ObjectParameter("ExtAddrComment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_EditExternalAddress", iDExternalAddressParameter, extAddrNameParameter, extAddrStreetParameter, extAddrHouseNumParameter, extAddrZipCodeParameter, extAddrCityParameter, extAddrRegionParameter, gPSLatParameter, gPSLngParameter, gPSValidParameter, extAddrCommentParameter)
    End Function

    Public Overridable Function sp_Do_AddCampNewExternalAddr(iDCampaign As Nullable(Of Integer), iDExternalAddress As Nullable(Of Integer), iDCampMember As ObjectParameter) As Integer
        Dim iDCampaignParameter As ObjectParameter = If(iDCampaign.HasValue, New ObjectParameter("IDCampaign", iDCampaign), New ObjectParameter("IDCampaign", GetType(Integer)))

        Dim iDExternalAddressParameter As ObjectParameter = If(iDExternalAddress.HasValue, New ObjectParameter("IDExternalAddress", iDExternalAddress), New ObjectParameter("IDExternalAddress", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddCampNewExternalAddr", iDCampaignParameter, iDExternalAddressParameter, iDCampMember)
    End Function

    Public Overridable Function sp_Do_DeleteCampNewExternalAddr(iDCampaign As Nullable(Of Integer), iDCampMember As Nullable(Of Integer), cnt As ObjectParameter) As Integer
        Dim iDCampaignParameter As ObjectParameter = If(iDCampaign.HasValue, New ObjectParameter("IDCampaign", iDCampaign), New ObjectParameter("IDCampaign", GetType(Integer)))

        Dim iDCampMemberParameter As ObjectParameter = If(iDCampMember.HasValue, New ObjectParameter("IDCampMember", iDCampMember), New ObjectParameter("IDCampMember", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_DeleteCampNewExternalAddr", iDCampaignParameter, iDCampMemberParameter, cnt)
    End Function

    Public Overridable Function sp_Get_SpisyOfIDSpisyOsoby(iDUser As Nullable(Of Integer), iDSpisyOsoby As Nullable(Of Integer)) As ObjectResult(Of sp_Get_SpisyOfIDSpisyOsoby_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_SpisyOfIDSpisyOsoby_Result)("sp_Get_SpisyOfIDSpisyOsoby", iDUserParameter, iDSpisyOsobyParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_8_Radio1(iDSpisu As Nullable(Of Integer), comment As String, lastLapseMsg As ObjectParameter) As ObjectResult(Of String)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim commentParameter As ObjectParameter = If(comment IsNot Nothing, New ObjectParameter("Comment", comment), New ObjectParameter("Comment", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Do_Super2_3_8_Radio1", iDSpisuParameter, commentParameter, lastLapseMsg)
    End Function

    Public Overridable Function sp_Do_Super2_3_8_Radio2(iDSpisu As Nullable(Of Integer), comment1 As String, dMax As Nullable(Of Date)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim comment1Parameter As ObjectParameter = If(comment1 IsNot Nothing, New ObjectParameter("Comment1", comment1), New ObjectParameter("Comment1", GetType(String)))

        Dim dMaxParameter As ObjectParameter = If(dMax.HasValue, New ObjectParameter("DMax", dMax), New ObjectParameter("DMax", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_8_Radio2", iDSpisuParameter, comment1Parameter, dMaxParameter)
    End Function

    Public Overridable Function sp_Do_Super2_3_8_Radio3(iDSpisu As Nullable(Of Integer), iDUser As Nullable(Of Integer), comment1 As String, rr_CaseNextActivity As Nullable(Of Short), commentJine As String, datumDeadLine As Nullable(Of Date)) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim comment1Parameter As ObjectParameter = If(comment1 IsNot Nothing, New ObjectParameter("Comment1", comment1), New ObjectParameter("Comment1", GetType(String)))

        Dim rr_CaseNextActivityParameter As ObjectParameter = If(rr_CaseNextActivity.HasValue, New ObjectParameter("rr_CaseNextActivity", rr_CaseNextActivity), New ObjectParameter("rr_CaseNextActivity", GetType(Short)))

        Dim commentJineParameter As ObjectParameter = If(commentJine IsNot Nothing, New ObjectParameter("CommentJine", commentJine), New ObjectParameter("CommentJine", GetType(String)))

        Dim datumDeadLineParameter As ObjectParameter = If(datumDeadLine.HasValue, New ObjectParameter("datumDeadLine", datumDeadLine), New ObjectParameter("datumDeadLine", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Super2_3_8_Radio3", iDSpisuParameter, iDUserParameter, comment1Parameter, rr_CaseNextActivityParameter, commentJineParameter, datumDeadLineParameter)
    End Function

    Public Overridable Function sp_Do_DeleteDocument(iDSpisyDocument As Nullable(Of Integer), filePath As ObjectParameter) As Integer
        Dim iDSpisyDocumentParameter As ObjectParameter = If(iDSpisyDocument.HasValue, New ObjectParameter("IDSpisyDocument", iDSpisyDocument), New ObjectParameter("IDSpisyDocument", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_DeleteDocument", iDSpisyDocumentParameter, filePath)
    End Function

    Public Overridable Function sp_Get_ListUserFee(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_ListUserFee_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_ListUserFee_Result)("sp_Get_ListUserFee", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_CashBook(iDUser As Nullable(Of Integer), top As Nullable(Of Integer)) As ObjectResult(Of sp_Get_CashBook_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim topParameter As ObjectParameter = If(top.HasValue, New ObjectParameter("Top", top), New ObjectParameter("Top", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_CashBook_Result)("sp_Get_CashBook", iDUserParameter, topParameter)
    End Function

    Public Overridable Function sp_Get_CashSUM(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_CashSUM_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_CashSUM_Result)("sp_Get_CashSUM", iDUserParameter)
    End Function

    Public Overridable Function sp_Do_CashAmountSended(iDCashPayment As Nullable(Of Integer), amountSended As Nullable(Of Double), check As Nullable(Of Boolean)) As Integer
        Dim iDCashPaymentParameter As ObjectParameter = If(iDCashPayment.HasValue, New ObjectParameter("IDCashPayment", iDCashPayment), New ObjectParameter("IDCashPayment", GetType(Integer)))

        Dim amountSendedParameter As ObjectParameter = If(amountSended.HasValue, New ObjectParameter("AmountSended", amountSended), New ObjectParameter("AmountSended", GetType(Double)))

        Dim checkParameter As ObjectParameter = If(check.HasValue, New ObjectParameter("Check", check), New ObjectParameter("Check", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_CashAmountSended", iDCashPaymentParameter, amountSendedParameter, checkParameter)
    End Function

    Public Overridable Function sp_Do_CashCheck(iDCashPayment As Nullable(Of Integer), check As Nullable(Of Boolean)) As Integer
        Dim iDCashPaymentParameter As ObjectParameter = If(iDCashPayment.HasValue, New ObjectParameter("IDCashPayment", iDCashPayment), New ObjectParameter("IDCashPayment", GetType(Integer)))

        Dim checkParameter As ObjectParameter = If(check.HasValue, New ObjectParameter("Check", check), New ObjectParameter("Check", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_CashCheck", iDCashPaymentParameter, checkParameter)
    End Function

    Public Overridable Function sp_Do_ChangeCashAmountSended(iDCashPayment As Nullable(Of Integer), amountSended As Nullable(Of Double)) As Integer
        Dim iDCashPaymentParameter As ObjectParameter = If(iDCashPayment.HasValue, New ObjectParameter("IDCashPayment", iDCashPayment), New ObjectParameter("IDCashPayment", GetType(Integer)))

        Dim amountSendedParameter As ObjectParameter = If(amountSended.HasValue, New ObjectParameter("AmountSended", amountSended), New ObjectParameter("AmountSended", GetType(Double)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeCashAmountSended", iDCashPaymentParameter, amountSendedParameter)
    End Function

    Public Overridable Function sp_Get_BulkPrint(iDCampaign As Nullable(Of Integer), uZ As Nullable(Of Boolean), dN As Nullable(Of Boolean), pR As Nullable(Of Boolean)) As ObjectResult(Of sp_Get_BulkPrint_Result)
        Dim iDCampaignParameter As ObjectParameter = If(iDCampaign.HasValue, New ObjectParameter("IDCampaign", iDCampaign), New ObjectParameter("IDCampaign", GetType(Integer)))

        Dim uZParameter As ObjectParameter = If(uZ.HasValue, New ObjectParameter("UZ", uZ), New ObjectParameter("UZ", GetType(Boolean)))

        Dim dNParameter As ObjectParameter = If(dN.HasValue, New ObjectParameter("DN", dN), New ObjectParameter("DN", GetType(Boolean)))

        Dim pRParameter As ObjectParameter = If(pR.HasValue, New ObjectParameter("PR", pR), New ObjectParameter("PR", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_BulkPrint_Result)("sp_Get_BulkPrint", iDCampaignParameter, uZParameter, dNParameter, pRParameter)
    End Function

    Public Overridable Function sp_Get_ListUrgCashPayments(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_ListUrgCashPayments_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_ListUrgCashPayments_Result)("sp_Get_ListUrgCashPayments", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_ListBilling(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_ListBilling_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_ListBilling_Result)("sp_Get_ListBilling", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_NotYetBilling(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_NotYetBilling_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_NotYetBilling_Result)("sp_Get_NotYetBilling", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_OnePaymentOrder(iDPaymentOrder As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim iDPaymentOrderParameter As ObjectParameter = If(iDPaymentOrder.HasValue, New ObjectParameter("IDPaymentOrder", iDPaymentOrder), New ObjectParameter("IDPaymentOrder", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_OnePaymentOrder", iDPaymentOrderParameter)
    End Function

    Public Overridable Function sp_Do_OnePaymentOrder(iDUser As Nullable(Of Integer), newIDPaymentOrder As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_OnePaymentOrder", iDUserParameter, newIDPaymentOrder)
    End Function

    Public Overridable Function sp_Get_SV_NonPairedPayments(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of sp_Get_SV_NonPairedPayments_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_SV_NonPairedPayments_Result)("sp_Get_SV_NonPairedPayments", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Do_SV_AddFee(iDUser As Nullable(Of Integer), iDSpisu As Nullable(Of Integer), rr_TypeFee As Nullable(Of Short), fee As Nullable(Of Single), sVApproved As Nullable(Of Boolean), aCC As String, paymentDate As Nullable(Of Date), persSurname As String, persName As String, creditorAlias As String) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim rr_TypeFeeParameter As ObjectParameter = If(rr_TypeFee.HasValue, New ObjectParameter("rr_TypeFee", rr_TypeFee), New ObjectParameter("rr_TypeFee", GetType(Short)))

        Dim feeParameter As ObjectParameter = If(fee.HasValue, New ObjectParameter("Fee", fee), New ObjectParameter("Fee", GetType(Single)))

        Dim sVApprovedParameter As ObjectParameter = If(sVApproved.HasValue, New ObjectParameter("SVApproved", sVApproved), New ObjectParameter("SVApproved", GetType(Boolean)))

        Dim aCCParameter As ObjectParameter = If(aCC IsNot Nothing, New ObjectParameter("ACC", aCC), New ObjectParameter("ACC", GetType(String)))

        Dim paymentDateParameter As ObjectParameter = If(paymentDate.HasValue, New ObjectParameter("PaymentDate", paymentDate), New ObjectParameter("PaymentDate", GetType(Date)))

        Dim persSurnameParameter As ObjectParameter = If(persSurname IsNot Nothing, New ObjectParameter("PersSurname", persSurname), New ObjectParameter("PersSurname", GetType(String)))

        Dim persNameParameter As ObjectParameter = If(persName IsNot Nothing, New ObjectParameter("PersName", persName), New ObjectParameter("PersName", GetType(String)))

        Dim creditorAliasParameter As ObjectParameter = If(creditorAlias IsNot Nothing, New ObjectParameter("CreditorAlias", creditorAlias), New ObjectParameter("CreditorAlias", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_SV_AddFee", iDUserParameter, iDSpisuParameter, rr_TypeFeeParameter, feeParameter, sVApprovedParameter, aCCParameter, paymentDateParameter, persSurnameParameter, persNameParameter, creditorAliasParameter)
    End Function

    Public Overridable Function sp_Do_SV_ChangeCash(iDCashPayment As Nullable(Of Integer), iDSpisyPlatbyDosle As Nullable(Of Integer)) As Integer
        Dim iDCashPaymentParameter As ObjectParameter = If(iDCashPayment.HasValue, New ObjectParameter("IDCashPayment", iDCashPayment), New ObjectParameter("IDCashPayment", GetType(Integer)))

        Dim iDSpisyPlatbyDosleParameter As ObjectParameter = If(iDSpisyPlatbyDosle.HasValue, New ObjectParameter("IDSpisyPlatbyDosle", iDSpisyPlatbyDosle), New ObjectParameter("IDSpisyPlatbyDosle", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_SV_ChangeCash", iDCashPaymentParameter, iDSpisyPlatbyDosleParameter)
    End Function

    Public Overridable Function sp_Get_Cash_ValidateFee(showAll As Nullable(Of Byte)) As ObjectResult(Of sp_Get_Cash_ValidateFee_Result)
        Dim showAllParameter As ObjectParameter = If(showAll.HasValue, New ObjectParameter("ShowAll", showAll), New ObjectParameter("ShowAll", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_Cash_ValidateFee_Result)("sp_Get_Cash_ValidateFee", showAllParameter)
    End Function

    Public Overridable Function sp_Do_Cash_ValidateFee(iDFee As Nullable(Of Integer), fee As Nullable(Of Single), sVApproved As Nullable(Of Boolean)) As Integer
        Dim iDFeeParameter As ObjectParameter = If(iDFee.HasValue, New ObjectParameter("IDFee", iDFee), New ObjectParameter("IDFee", GetType(Integer)))

        Dim feeParameter As ObjectParameter = If(fee.HasValue, New ObjectParameter("Fee", fee), New ObjectParameter("Fee", GetType(Single)))

        Dim sVApprovedParameter As ObjectParameter = If(sVApproved.HasValue, New ObjectParameter("SVApproved", sVApproved), New ObjectParameter("SVApproved", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Cash_ValidateFee", iDFeeParameter, feeParameter, sVApprovedParameter)
    End Function

    Public Overridable Function sp_Get_SV_CashListACC(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_SV_CashListACC_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_SV_CashListACC_Result)("sp_Get_SV_CashListACC", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_Cash_Invoice(iDUser As Nullable(Of Integer), iDMonthBilling As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDMonthBillingParameter As ObjectParameter = If(iDMonthBilling.HasValue, New ObjectParameter("IDMonthBilling", iDMonthBilling), New ObjectParameter("IDMonthBilling", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_Cash_Invoice", iDUserParameter, iDMonthBillingParameter)
    End Function

    Public Overridable Function sp_Get_Cash_MissingCashDocNumber(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_Get_Cash_MissingCashDocNumber_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_Cash_MissingCashDocNumber_Result)("sp_Get_Cash_MissingCashDocNumber", iDUserParameter)
    End Function

    Public Overridable Function sp_Do_Cash_GenerateCanceledDocNumber(iDUser As Nullable(Of Integer), cashDocNumber As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim cashDocNumberParameter As ObjectParameter = If(cashDocNumber.HasValue, New ObjectParameter("CashDocNumber", cashDocNumber), New ObjectParameter("CashDocNumber", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_Cash_GenerateCanceledDocNumber", iDUserParameter, cashDocNumberParameter)
    End Function

    Public Overridable Function sp_Do_SV_Cash_UpdateDateOnCentrale(iDMonthBilling As Nullable(Of Integer), datum As Nullable(Of Date)) As Integer
        Dim iDMonthBillingParameter As ObjectParameter = If(iDMonthBilling.HasValue, New ObjectParameter("IDMonthBilling", iDMonthBilling), New ObjectParameter("IDMonthBilling", GetType(Integer)))

        Dim datumParameter As ObjectParameter = If(datum.HasValue, New ObjectParameter("Datum", datum), New ObjectParameter("Datum", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_SV_Cash_UpdateDateOnCentrale", iDMonthBillingParameter, datumParameter)
    End Function

    Public Overridable Function sp_Get_SV_ListBilling() As ObjectResult(Of sp_Get_SV_ListBilling_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_SV_ListBilling_Result)("sp_Get_SV_ListBilling")
    End Function

    Public Overridable Function sp_Get_DMAX(iDSpisu As Nullable(Of Integer), dMaxOsn As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_DMAX", iDSpisuParameter, dMaxOsn)
    End Function

    Public Overridable Function sp_Rec_Start(iDUser As Nullable(Of Integer), rr_VisitType As Nullable(Of Short), iDSpisu As Nullable(Of Integer), iDVisitReport As ObjectParameter, sumTxt As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim rr_VisitTypeParameter As ObjectParameter = If(rr_VisitType.HasValue, New ObjectParameter("rr_VisitType", rr_VisitType), New ObjectParameter("rr_VisitType", GetType(Short)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Rec_Start", iDUserParameter, rr_VisitTypeParameter, iDSpisuParameter, iDVisitReport, sumTxt)
    End Function

    Public Overridable Function sp_ANDROID_Object_3137_14(iDSpisu As Nullable(Of Integer), maxCountPayments As ObjectParameter, max As ObjectParameter, min As ObjectParameter, actualDebit As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDROID_Object_3137_14", iDSpisuParameter, maxCountPayments, max, min, actualDebit)
    End Function

    Public Overridable Function sp_ANDR_B3_Bonita(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_Bonita_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_Bonita_Result)("sp_ANDR_B3_Bonita", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_DetailSpisu(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_DetailSpisu_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_DetailSpisu_Result)("sp_ANDR_B3_DetailSpisu", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_DohodyOUhrade(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_DohodyOUhrade_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_DohodyOUhrade_Result)("sp_ANDR_B3_DohodyOUhrade", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_Dokumentace(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_Dokumentace_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_Dokumentace_Result)("sp_ANDR_B3_Dokumentace", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_HistorieDohod(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_HistorieDohod_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_HistorieDohod_Result)("sp_ANDR_B3_HistorieDohod", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_HistorieSpisu(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_HistorieSpisu_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_HistorieSpisu_Result)("sp_ANDR_B3_HistorieSpisu", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_ListAllFV(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_ListAllFV_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_ListAllFV_Result)("sp_ANDR_B3_ListAllFV", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_Osoby(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_Osoby_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_Osoby_Result)("sp_ANDR_B3_Osoby", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OsobyAddress(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OsobyAddress_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OsobyAddress_Result)("sp_ANDR_B3_OsobyAddress", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OsobyDalsiKontakt(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OsobyDalsiKontakt_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OsobyDalsiKontakt_Result)("sp_ANDR_B3_OsobyDalsiKontakt", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OsobyEmail(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OsobyEmail_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OsobyEmail_Result)("sp_ANDR_B3_OsobyEmail", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OsobyPhone(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OsobyPhone_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OsobyPhone_Result)("sp_ANDR_B3_OsobyPhone", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OsobyRole(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OsobyRole_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OsobyRole_Result)("sp_ANDR_B3_OsobyRole", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OsobyZam(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OsobyZam_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OsobyZam_Result)("sp_ANDR_B3_OsobyZam", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_OtherInfo(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_OtherInfo_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_OtherInfo_Result)("sp_ANDR_B3_OtherInfo", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_PlatbyDoslePo1OSN(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_PlatbyDoslePo1OSN_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_PlatbyDoslePo1OSN_Result)("sp_ANDR_B3_PlatbyDoslePo1OSN", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_PlatbyDoslePred1OSN(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_PlatbyDoslePred1OSN_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_PlatbyDoslePred1OSN_Result)("sp_ANDR_B3_PlatbyDoslePred1OSN", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_SpecifikaceDluhuFinUdaje(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_SpecifikaceDluhuFinUdaje_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_SpecifikaceDluhuFinUdaje_Result)("sp_ANDR_B3_SpecifikaceDluhuFinUdaje", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_SpecifikaceDluhuVeritel(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_SpecifikaceDluhuVeritel_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_SpecifikaceDluhuVeritel_Result)("sp_ANDR_B3_SpecifikaceDluhuVeritel", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_SpisyDluznika(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_SpisyDluznika_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_SpisyDluznika_Result)("sp_ANDR_B3_SpisyDluznika", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_B3_TerminyOSN(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_B3_TerminyOSN_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B3_TerminyOSN_Result)("sp_ANDR_B3_TerminyOSN", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_Get_CreditorDetail(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Get_CreditorDetail_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Get_CreditorDetail_Result)("sp_ANDR_Get_CreditorDetail", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_Campaign(iDUser As Nullable(Of Integer), varianta As Nullable(Of Byte)) As ObjectResult(Of sp_ANDR_Campaign_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim variantaParameter As ObjectParameter = If(varianta.HasValue, New ObjectParameter("Varianta", varianta), New ObjectParameter("Varianta", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Campaign_Result)("sp_ANDR_Campaign", iDUserParameter, variantaParameter)
    End Function

    Public Overridable Function sp_ANDR_CampMember(iDUser As Nullable(Of Integer), varianta As Nullable(Of Byte)) As ObjectResult(Of sp_ANDR_CampMember_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim variantaParameter As ObjectParameter = If(varianta.HasValue, New ObjectParameter("Varianta", varianta), New ObjectParameter("Varianta", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_CampMember_Result)("sp_ANDR_CampMember", iDUserParameter, variantaParameter)
    End Function

    Public Overridable Function sp_Get_LastTimeStamp(newIDSync As ObjectParameter, lastTStamp As ObjectParameter, newTStamp As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_LastTimeStamp", newIDSync, lastTStamp, newTStamp)
    End Function

    Public Overridable Function sp_ANDR_Get_LastTimeStamp(tStamp As ObjectParameter) As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_Get_LastTimeStamp", tStamp)
    End Function

    Public Overridable Function sp_ANDR_Get_Spisy(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Get_Spisy_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Get_Spisy_Result)("sp_ANDR_Get_Spisy", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_Object_3137_14(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Object_3137_14_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Object_3137_14_Result)("sp_ANDR_Object_3137_14", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_Get_AllAddressOfDebitor(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Get_AllAddressOfDebitor_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Get_AllAddressOfDebitor_Result)("sp_ANDR_Get_AllAddressOfDebitor", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_Get2_Addresses(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Get2_Addresses_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Get2_Addresses_Result)("sp_ANDR_Get2_Addresses", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_SV_DSHB_Get_SumFee() As ObjectResult(Of sp_SV_DSHB_Get_SumFee_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_SV_DSHB_Get_SumFee_Result)("sp_SV_DSHB_Get_SumFee")
    End Function

    Public Overridable Function sp_SV_DSHB_Get_SumFeeDetail(billingMonth As Nullable(Of Short), billingYear As Nullable(Of Short)) As ObjectResult(Of sp_SV_DSHB_Get_SumFeeDetail_Result)
        Dim billingMonthParameter As ObjectParameter = If(billingMonth.HasValue, New ObjectParameter("BillingMonth", billingMonth), New ObjectParameter("BillingMonth", GetType(Short)))

        Dim billingYearParameter As ObjectParameter = If(billingYear.HasValue, New ObjectParameter("BillingYear", billingYear), New ObjectParameter("BillingYear", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_SV_DSHB_Get_SumFeeDetail_Result)("sp_SV_DSHB_Get_SumFeeDetail", billingMonthParameter, billingYearParameter)
    End Function

    Public Overridable Function sp_DSHB_Claims(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_Claims_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_Claims_Result)("sp_DSHB_Claims", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_ClaimsVolume(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_ClaimsVolume_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_ClaimsVolume_Result)("sp_DSHB_ClaimsVolume", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_PaymentsSum(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_PaymentsSum_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_PaymentsSum_Result)("sp_DSHB_PaymentsSum", iDUserParameter)
    End Function

    Public Overridable Function sp_SV_DSHB_Get_SumFeeDetailByUser(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_SV_DSHB_Get_SumFeeDetailByUser_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_SV_DSHB_Get_SumFeeDetailByUser_Result)("sp_SV_DSHB_Get_SumFeeDetailByUser", iDUserParameter)
    End Function

    Public Overridable Function sp_SV_DSHB_Get_SumFeeDetailOverIP(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_SV_DSHB_Get_SumFeeDetailOverIP_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_SV_DSHB_Get_SumFeeDetailOverIP_Result)("sp_SV_DSHB_Get_SumFeeDetailOverIP", iDUserParameter)
    End Function

    Public Overridable Function sp_SV_DSHB_Get_SumFeeOverIP() As ObjectResult(Of sp_SV_DSHB_Get_SumFeeOverIP_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_SV_DSHB_Get_SumFeeOverIP_Result)("sp_SV_DSHB_Get_SumFeeOverIP")
    End Function

    Public Overridable Function sp_DSHB_Get_AverageDaysForFV(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_Get_AverageDaysForFV_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_Get_AverageDaysForFV_Result)("sp_DSHB_Get_AverageDaysForFV", iDUserParameter)
    End Function

    Public Overridable Function sp_DSHB_Get_SumDebit(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_Get_SumDebit_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_Get_SumDebit_Result)("sp_DSHB_Get_SumDebit", iDUserParameter)
    End Function

    Public Overridable Function sp_Do_SV_ChangeAmountOnCentrale(iDCashPayment As Nullable(Of Integer), amount As Nullable(Of Double)) As Integer
        Dim iDCashPaymentParameter As ObjectParameter = If(iDCashPayment.HasValue, New ObjectParameter("IDCashPayment", iDCashPayment), New ObjectParameter("IDCashPayment", GetType(Integer)))

        Dim amountParameter As ObjectParameter = If(amount.HasValue, New ObjectParameter("Amount", amount), New ObjectParameter("Amount", GetType(Double)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_SV_ChangeAmountOnCentrale", iDCashPaymentParameter, amountParameter)
    End Function

    Public Overridable Function sp_ANDR_Get_FVOsoby(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Get_FVOsoby_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Get_FVOsoby_Result)("sp_ANDR_Get_FVOsoby", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_DSHB_10_05(iDUser As Nullable(Of Integer)) As ObjectResult(Of sp_DSHB_10_05_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_DSHB_10_05_Result)("sp_DSHB_10_05", iDUserParameter)
    End Function

    Public Overridable Function sp_Get_SV_CashRevision() As ObjectResult(Of sp_Get_SV_CashRevision_Result1)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_SV_CashRevision_Result1)("sp_Get_SV_CashRevision")
    End Function

    Public Overridable Function sp_Do_AndroidLastCall(iDUser As Nullable(Of Integer)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AndroidLastCall", iDUserParameter)
    End Function

    Public Overridable Function sp_Do_ChangeEmployerValidity(iDSpisyOsobyZam As Nullable(Of Integer), rr_AddressValidity As Nullable(Of Short)) As Integer
        Dim iDSpisyOsobyZamParameter As ObjectParameter = If(iDSpisyOsobyZam.HasValue, New ObjectParameter("IDSpisyOsobyZam", iDSpisyOsobyZam), New ObjectParameter("IDSpisyOsobyZam", GetType(Integer)))

        Dim rr_AddressValidityParameter As ObjectParameter = If(rr_AddressValidity.HasValue, New ObjectParameter("rr_AddressValidity", rr_AddressValidity), New ObjectParameter("rr_AddressValidity", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_ChangeEmployerValidity", iDSpisyOsobyZamParameter, rr_AddressValidityParameter)
    End Function

    Public Overridable Function sp_Do_AddEmployer(iDSpisu As Nullable(Of Integer), employerName As String, employerIC As String, employerCity As String, employerHouseNum As String, employerStreet As String, employerZipCode As String, employerType As String, rr_AddressValidity As Nullable(Of Short), employerAddrFull As String, employerContactSurname As String, employerContactName As String, employerContactEmail As String, employerContactPhone As String) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim employerNameParameter As ObjectParameter = If(employerName IsNot Nothing, New ObjectParameter("EmployerName", employerName), New ObjectParameter("EmployerName", GetType(String)))

        Dim employerICParameter As ObjectParameter = If(employerIC IsNot Nothing, New ObjectParameter("EmployerIC", employerIC), New ObjectParameter("EmployerIC", GetType(String)))

        Dim employerCityParameter As ObjectParameter = If(employerCity IsNot Nothing, New ObjectParameter("EmployerCity", employerCity), New ObjectParameter("EmployerCity", GetType(String)))

        Dim employerHouseNumParameter As ObjectParameter = If(employerHouseNum IsNot Nothing, New ObjectParameter("EmployerHouseNum", employerHouseNum), New ObjectParameter("EmployerHouseNum", GetType(String)))

        Dim employerStreetParameter As ObjectParameter = If(employerStreet IsNot Nothing, New ObjectParameter("EmployerStreet", employerStreet), New ObjectParameter("EmployerStreet", GetType(String)))

        Dim employerZipCodeParameter As ObjectParameter = If(employerZipCode IsNot Nothing, New ObjectParameter("EmployerZipCode", employerZipCode), New ObjectParameter("EmployerZipCode", GetType(String)))

        Dim employerTypeParameter As ObjectParameter = If(employerType IsNot Nothing, New ObjectParameter("EmployerType", employerType), New ObjectParameter("EmployerType", GetType(String)))

        Dim rr_AddressValidityParameter As ObjectParameter = If(rr_AddressValidity.HasValue, New ObjectParameter("rr_AddressValidity", rr_AddressValidity), New ObjectParameter("rr_AddressValidity", GetType(Short)))

        Dim employerAddrFullParameter As ObjectParameter = If(employerAddrFull IsNot Nothing, New ObjectParameter("EmployerAddrFull", employerAddrFull), New ObjectParameter("EmployerAddrFull", GetType(String)))

        Dim employerContactSurnameParameter As ObjectParameter = If(employerContactSurname IsNot Nothing, New ObjectParameter("EmployerContactSurname", employerContactSurname), New ObjectParameter("EmployerContactSurname", GetType(String)))

        Dim employerContactNameParameter As ObjectParameter = If(employerContactName IsNot Nothing, New ObjectParameter("EmployerContactName", employerContactName), New ObjectParameter("EmployerContactName", GetType(String)))

        Dim employerContactEmailParameter As ObjectParameter = If(employerContactEmail IsNot Nothing, New ObjectParameter("EmployerContactEmail", employerContactEmail), New ObjectParameter("EmployerContactEmail", GetType(String)))

        Dim employerContactPhoneParameter As ObjectParameter = If(employerContactPhone IsNot Nothing, New ObjectParameter("EmployerContactPhone", employerContactPhone), New ObjectParameter("EmployerContactPhone", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_AddEmployer", iDSpisuParameter, employerNameParameter, employerICParameter, employerCityParameter, employerHouseNumParameter, employerStreetParameter, employerZipCodeParameter, employerTypeParameter, rr_AddressValidityParameter, employerAddrFullParameter, employerContactSurnameParameter, employerContactNameParameter, employerContactEmailParameter, employerContactPhoneParameter)
    End Function

    Public Overridable Function sp_Do_NewUserPassword(iDUser As Nullable(Of Integer), userPWD As String, newPWDIsOK As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim userPWDParameter As ObjectParameter = If(userPWD IsNot Nothing, New ObjectParameter("UserPWD", userPWD), New ObjectParameter("UserPWD", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_NewUserPassword", iDUserParameter, userPWDParameter, newPWDIsOK)
    End Function

    Public Overridable Function sp_Do_SuccessUserLogin(iDUser As Nullable(Of Integer), countOfAllowedBadLogins As Nullable(Of Short), successLogin As Nullable(Of Boolean)) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim countOfAllowedBadLoginsParameter As ObjectParameter = If(countOfAllowedBadLogins.HasValue, New ObjectParameter("CountOfAllowedBadLogins", countOfAllowedBadLogins), New ObjectParameter("CountOfAllowedBadLogins", GetType(Short)))

        Dim successLoginParameter As ObjectParameter = If(successLogin.HasValue, New ObjectParameter("SuccessLogin", successLogin), New ObjectParameter("SuccessLogin", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_SuccessUserLogin", iDUserParameter, countOfAllowedBadLoginsParameter, successLoginParameter)
    End Function

    Public Overridable Function sp_Get_UserAccountInfo(iDUser As Nullable(Of Integer), passwordValidityDays As Nullable(Of Integer), userAccountEnabled As ObjectParameter, badLoginsBlock As ObjectParameter, passwordValidityEndBlock As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim passwordValidityDaysParameter As ObjectParameter = If(passwordValidityDays.HasValue, New ObjectParameter("PasswordValidityDays", passwordValidityDays), New ObjectParameter("PasswordValidityDays", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_UserAccountInfo", iDUserParameter, passwordValidityDaysParameter, userAccountEnabled, badLoginsBlock, passwordValidityEndBlock)
    End Function

    Public Overridable Function sp_SV_CreditorTemplateEdit(iDCreditor As Nullable(Of Integer), rr_TemplateType As String, templateFileName As String) As Integer
        Dim iDCreditorParameter As ObjectParameter = If(iDCreditor.HasValue, New ObjectParameter("IDCreditor", iDCreditor), New ObjectParameter("IDCreditor", GetType(Integer)))

        Dim rr_TemplateTypeParameter As ObjectParameter = If(rr_TemplateType IsNot Nothing, New ObjectParameter("rr_TemplateType", rr_TemplateType), New ObjectParameter("rr_TemplateType", GetType(String)))

        Dim templateFileNameParameter As ObjectParameter = If(templateFileName IsNot Nothing, New ObjectParameter("TemplateFileName", templateFileName), New ObjectParameter("TemplateFileName", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_SV_CreditorTemplateEdit", iDCreditorParameter, rr_TemplateTypeParameter, templateFileNameParameter)
    End Function

    Public Overridable Function sp_Get_XMLPrintLetter(iDSpisu As Nullable(Of Integer), ignorovatStavSpisu As Nullable(Of Boolean)) As ObjectResult(Of String)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim ignorovatStavSpisuParameter As ObjectParameter = If(ignorovatStavSpisu.HasValue, New ObjectParameter("IgnorovatStavSpisu", ignorovatStavSpisu), New ObjectParameter("IgnorovatStavSpisu", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_XMLPrintLetter", iDSpisuParameter, ignorovatStavSpisuParameter)
    End Function

    Public Overridable Function sp_Get_XMLPrintUZSK(iDSpisu As Nullable(Of Integer), ignorovatStavSpisu As Nullable(Of Boolean)) As ObjectResult(Of String)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim ignorovatStavSpisuParameter As ObjectParameter = If(ignorovatStavSpisu.HasValue, New ObjectParameter("IgnorovatStavSpisu", ignorovatStavSpisu), New ObjectParameter("IgnorovatStavSpisu", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_XMLPrintUZSK", iDSpisuParameter, ignorovatStavSpisuParameter)
    End Function

    Public Overridable Function sp_SV_PDFDocumentForPrint(iDCampaign As Nullable(Of Integer)) As ObjectResult(Of sp_SV_PDFDocumentForPrint_Result)
        Dim iDCampaignParameter As ObjectParameter = If(iDCampaign.HasValue, New ObjectParameter("IDCampaign", iDCampaign), New ObjectParameter("IDCampaign", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_SV_PDFDocumentForPrint_Result)("sp_SV_PDFDocumentForPrint", iDCampaignParameter)
    End Function

    Public Overridable Function sp_Get_XMLPrintKartaDL(iDSpisu As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_XMLPrintKartaDL", iDSpisuParameter)
    End Function

    Public Overridable Function sp_Get_XMLPrintKartaDLPocetAdres(iDSpisu As Nullable(Of Integer), pocetAdres As ObjectParameter, lastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_XMLPrintKartaDLPocetAdres", iDSpisuParameter, pocetAdres, lastLapse)
    End Function

    Public Overridable Function sp_ANDR_B4_HistorieSpisu(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer), balik As Nullable(Of Short)) As ObjectResult(Of sp_ANDR_B4_HistorieSpisu_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Dim balikParameter As ObjectParameter = If(balik.HasValue, New ObjectParameter("Balik", balik), New ObjectParameter("Balik", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B4_HistorieSpisu_Result)("sp_ANDR_B4_HistorieSpisu", iDUserParameter, tStampParameter, balikParameter)
    End Function

    Public Overridable Function sp_ANDR_B4_Osoby(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer), balik As Nullable(Of Short)) As ObjectResult(Of sp_ANDR_B4_Osoby_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Dim balikParameter As ObjectParameter = If(balik.HasValue, New ObjectParameter("Balik", balik), New ObjectParameter("Balik", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B4_Osoby_Result)("sp_ANDR_B4_Osoby", iDUserParameter, tStampParameter, balikParameter)
    End Function

    Public Overridable Function sp_ANDR_B4_OsobyAddress(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer), balik As Nullable(Of Short)) As ObjectResult(Of sp_ANDR_B4_OsobyAddress_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Dim balikParameter As ObjectParameter = If(balik.HasValue, New ObjectParameter("Balik", balik), New ObjectParameter("Balik", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B4_OsobyAddress_Result)("sp_ANDR_B4_OsobyAddress", iDUserParameter, tStampParameter, balikParameter)
    End Function

    Public Overridable Function sp_ANDR_B4_SpecifikaceDluhuFinUdaje(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer), balik As Nullable(Of Short)) As ObjectResult(Of sp_ANDR_B4_SpecifikaceDluhuFinUdaje_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Dim balikParameter As ObjectParameter = If(balik.HasValue, New ObjectParameter("Balik", balik), New ObjectParameter("Balik", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B4_SpecifikaceDluhuFinUdaje_Result)("sp_ANDR_B4_SpecifikaceDluhuFinUdaje", iDUserParameter, tStampParameter, balikParameter)
    End Function

    Public Overridable Function sp_ANDR_B4_SpecifikaceDluhuVeritel(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer), balik As Nullable(Of Short)) As ObjectResult(Of sp_ANDR_B4_SpecifikaceDluhuVeritel_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Dim balikParameter As ObjectParameter = If(balik.HasValue, New ObjectParameter("Balik", balik), New ObjectParameter("Balik", GetType(Short)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_B4_SpecifikaceDluhuVeritel_Result)("sp_ANDR_B4_SpecifikaceDluhuVeritel", iDUserParameter, tStampParameter, balikParameter)
    End Function

    Public Overridable Function sp_Get_IDSpisuByACC(aCC As String, iDSpisu As ObjectParameter, lL_LastLapse As ObjectParameter, lastLapseText As ObjectParameter) As Integer
        Dim aCCParameter As ObjectParameter = If(aCC IsNot Nothing, New ObjectParameter("ACC", aCC), New ObjectParameter("ACC", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Get_IDSpisuByACC", aCCParameter, iDSpisu, lL_LastLapse, lastLapseText)
    End Function

    Public Overridable Function sp_Get_SV_AllCasesFromTRACE() As ObjectResult(Of String)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_SV_AllCasesFromTRACE")
    End Function

    Public Overridable Function sp_ANDR_T5_Bonita(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Bonita_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Bonita_Result)("sp_ANDR_T5_Bonita", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_DetailSpisu(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_DetailSpisu_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_DetailSpisu_Result)("sp_ANDR_T5_DetailSpisu", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_DohodyOUhrade(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_DohodyOUhrade_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_DohodyOUhrade_Result)("sp_ANDR_T5_DohodyOUhrade", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Dokumentace(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Dokumentace_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Dokumentace_Result)("sp_ANDR_T5_Dokumentace", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_HistorieDohod(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_HistorieDohod_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_HistorieDohod_Result)("sp_ANDR_T5_HistorieDohod", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_HistorieSpisu(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_HistorieSpisu_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_HistorieSpisu_Result)("sp_ANDR_T5_HistorieSpisu", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_ListAllFV(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_ListAllFV_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_ListAllFV_Result)("sp_ANDR_T5_ListAllFV", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Osoby(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Osoby_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Osoby_Result)("sp_ANDR_T5_Osoby", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OsobyAddress(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OsobyAddress_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OsobyAddress_Result)("sp_ANDR_T5_OsobyAddress", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OsobyDalsiKontakt(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OsobyDalsiKontakt_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OsobyDalsiKontakt_Result)("sp_ANDR_T5_OsobyDalsiKontakt", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OsobyEmail(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OsobyEmail_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OsobyEmail_Result)("sp_ANDR_T5_OsobyEmail", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OsobyPhone(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OsobyPhone_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OsobyPhone_Result)("sp_ANDR_T5_OsobyPhone", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OsobyRole(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OsobyRole_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OsobyRole_Result)("sp_ANDR_T5_OsobyRole", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OsobyZam(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OsobyZam_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OsobyZam_Result)("sp_ANDR_T5_OsobyZam", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_OtherInfo(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_OtherInfo_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_OtherInfo_Result)("sp_ANDR_T5_OtherInfo", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_PlatbyDoslePo1OSN(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_PlatbyDoslePo1OSN_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_PlatbyDoslePo1OSN_Result)("sp_ANDR_T5_PlatbyDoslePo1OSN", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_PlatbyDoslePred1OSN(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_PlatbyDoslePred1OSN_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_PlatbyDoslePred1OSN_Result)("sp_ANDR_T5_PlatbyDoslePred1OSN", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_SpecifikaceDluhuFinUdaje(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_SpecifikaceDluhuFinUdaje_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_SpecifikaceDluhuFinUdaje_Result)("sp_ANDR_T5_SpecifikaceDluhuFinUdaje", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_SpecifikaceDluhuVeritel(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_SpecifikaceDluhuVeritel_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_SpecifikaceDluhuVeritel_Result)("sp_ANDR_T5_SpecifikaceDluhuVeritel", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_SpisyDluznika(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_SpisyDluznika_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_SpisyDluznika_Result)("sp_ANDR_T5_SpisyDluznika", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_TerminyOSN(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_TerminyOSN_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_TerminyOSN_Result)("sp_ANDR_T5_TerminyOSN", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_B5_Start(iDUser As Nullable(Of Integer), varianta As Nullable(Of Byte), sumRowCnt As ObjectParameter, lL_LastLapse As ObjectParameter, lastLapseText As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim variantaParameter As ObjectParameter = If(varianta.HasValue, New ObjectParameter("Varianta", varianta), New ObjectParameter("Varianta", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_B5_Start", iDUserParameter, variantaParameter, sumRowCnt, lL_LastLapse, lastLapseText)
    End Function

    Public Overridable Function sp_ANDR_T5_Campaign(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Campaign_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Campaign_Result)("sp_ANDR_T5_Campaign", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_CampMember(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_CampMember_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_CampMember_Result)("sp_ANDR_T5_CampMember", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_DSHB_10_01(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_DSHB_10_01_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_DSHB_10_01_Result)("sp_ANDR_T5_DSHB_10_01", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_DSHB_10_02(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_DSHB_10_02_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_DSHB_10_02_Result)("sp_ANDR_T5_DSHB_10_02", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Get_AllAddressOfDebitor(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Get_AllAddressOfDebitor_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Get_AllAddressOfDebitor_Result)("sp_ANDR_T5_Get_AllAddressOfDebitor", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Get_CreditorDetail(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Get_CreditorDetail_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Get_CreditorDetail_Result)("sp_ANDR_T5_Get_CreditorDetail", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Get_FVOsoby(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Get_FVOsoby_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Get_FVOsoby_Result)("sp_ANDR_T5_Get_FVOsoby", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Get_Spisy(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Get_Spisy_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Get_Spisy_Result)("sp_ANDR_T5_Get_Spisy", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Get2_Addresses(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Get2_Addresses_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Get2_Addresses_Result)("sp_ANDR_T5_Get2_Addresses", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_Object_3137_14(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_Object_3137_14_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_Object_3137_14_Result)("sp_ANDR_T5_Object_3137_14", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_tblRegisterRestrictions(skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_tblRegisterRestrictions_Result)
        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_tblRegisterRestrictions_Result)("sp_ANDR_T5_tblRegisterRestrictions", skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_vwrr_PersTypeMini(skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_vwrr_PersTypeMini_Result)
        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_vwrr_PersTypeMini_Result)("sp_ANDR_T5_vwrr_PersTypeMini", skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_C5_AddFVReport(uIDFVReport As Nullable(Of System.Guid), iDUser As Nullable(Of Integer), rr_StateFVReport As Nullable(Of Short), createDate As Nullable(Of Date), iDSpisu As Nullable(Of Integer), aCC As String, iDSpisyOsoby As Nullable(Of Integer), subscriberID As Nullable(Of Long), iDSpisyOsobyAdresy As Nullable(Of Integer), debtLastFirstName As String) As Integer
        Dim uIDFVReportParameter As ObjectParameter = If(uIDFVReport.HasValue, New ObjectParameter("UIDFVReport", uIDFVReport), New ObjectParameter("UIDFVReport", GetType(System.Guid)))

        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim rr_StateFVReportParameter As ObjectParameter = If(rr_StateFVReport.HasValue, New ObjectParameter("rr_StateFVReport", rr_StateFVReport), New ObjectParameter("rr_StateFVReport", GetType(Short)))

        Dim createDateParameter As ObjectParameter = If(createDate.HasValue, New ObjectParameter("CreateDate", createDate), New ObjectParameter("CreateDate", GetType(Date)))

        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim aCCParameter As ObjectParameter = If(aCC IsNot Nothing, New ObjectParameter("ACC", aCC), New ObjectParameter("ACC", GetType(String)))

        Dim iDSpisyOsobyParameter As ObjectParameter = If(iDSpisyOsoby.HasValue, New ObjectParameter("IDSpisyOsoby", iDSpisyOsoby), New ObjectParameter("IDSpisyOsoby", GetType(Integer)))

        Dim subscriberIDParameter As ObjectParameter = If(subscriberID.HasValue, New ObjectParameter("SubscriberID", subscriberID), New ObjectParameter("SubscriberID", GetType(Long)))

        Dim iDSpisyOsobyAdresyParameter As ObjectParameter = If(iDSpisyOsobyAdresy.HasValue, New ObjectParameter("IDSpisyOsobyAdresy", iDSpisyOsobyAdresy), New ObjectParameter("IDSpisyOsobyAdresy", GetType(Integer)))

        Dim debtLastFirstNameParameter As ObjectParameter = If(debtLastFirstName IsNot Nothing, New ObjectParameter("DebtLastFirstName", debtLastFirstName), New ObjectParameter("DebtLastFirstName", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_C5_AddFVReport", uIDFVReportParameter, iDUserParameter, rr_StateFVReportParameter, createDateParameter, iDSpisuParameter, aCCParameter, iDSpisyOsobyParameter, subscriberIDParameter, iDSpisyOsobyAdresyParameter, debtLastFirstNameParameter)
    End Function

    Public Overridable Function sp_ANDR_C5_AddFVReportPol(uIDFVReport As Nullable(Of System.Guid), ordering As Nullable(Of Integer), [object] As String, objectXML As String, finished As Nullable(Of Boolean), isSubObject As Nullable(Of Boolean), head As Nullable(Of Boolean), rr_IDFVProcess As Nullable(Of Byte), lL_LastLapse As ObjectParameter) As Integer
        Dim uIDFVReportParameter As ObjectParameter = If(uIDFVReport.HasValue, New ObjectParameter("UIDFVReport", uIDFVReport), New ObjectParameter("UIDFVReport", GetType(System.Guid)))

        Dim orderingParameter As ObjectParameter = If(ordering.HasValue, New ObjectParameter("Ordering", ordering), New ObjectParameter("Ordering", GetType(Integer)))

        Dim objectParameter As ObjectParameter = If([object] IsNot Nothing, New ObjectParameter("Object", [object]), New ObjectParameter("Object", GetType(String)))

        Dim objectXMLParameter As ObjectParameter = If(objectXML IsNot Nothing, New ObjectParameter("ObjectXML", objectXML), New ObjectParameter("ObjectXML", GetType(String)))

        Dim finishedParameter As ObjectParameter = If(finished.HasValue, New ObjectParameter("Finished", finished), New ObjectParameter("Finished", GetType(Boolean)))

        Dim isSubObjectParameter As ObjectParameter = If(isSubObject.HasValue, New ObjectParameter("IsSubObject", isSubObject), New ObjectParameter("IsSubObject", GetType(Boolean)))

        Dim headParameter As ObjectParameter = If(head.HasValue, New ObjectParameter("Head", head), New ObjectParameter("Head", GetType(Boolean)))

        Dim rr_IDFVProcessParameter As ObjectParameter = If(rr_IDFVProcess.HasValue, New ObjectParameter("rr_IDFVProcess", rr_IDFVProcess), New ObjectParameter("rr_IDFVProcess", GetType(Byte)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_C5_AddFVReportPol", uIDFVReportParameter, orderingParameter, objectParameter, objectXMLParameter, finishedParameter, isSubObjectParameter, headParameter, rr_IDFVProcessParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_ANDR_C5_GetFVReportState(uIDFVReport As Nullable(Of System.Guid), rr_StateFVReport As ObjectParameter, detail As ObjectParameter) As Integer
        Dim uIDFVReportParameter As ObjectParameter = If(uIDFVReport.HasValue, New ObjectParameter("UIDFVReport", uIDFVReport), New ObjectParameter("UIDFVReport", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_C5_GetFVReportState", uIDFVReportParameter, rr_StateFVReport, detail)
    End Function

    Public Overridable Function sp_ANDR_C5_AddFVReportStart(uIDFVReport As Nullable(Of System.Guid), countOfXMLRows As Nullable(Of Integer), rr_StateFVReport As ObjectParameter, detail As ObjectParameter) As Integer
        Dim uIDFVReportParameter As ObjectParameter = If(uIDFVReport.HasValue, New ObjectParameter("UIDFVReport", uIDFVReport), New ObjectParameter("UIDFVReport", GetType(System.Guid)))

        Dim countOfXMLRowsParameter As ObjectParameter = If(countOfXMLRows.HasValue, New ObjectParameter("CountOfXMLRows", countOfXMLRows), New ObjectParameter("CountOfXMLRows", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_C5_AddFVReportStart", uIDFVReportParameter, countOfXMLRowsParameter, rr_StateFVReport, detail)
    End Function

    Public Overridable Function sp_ANDR_C5_FVReportXMLControl(uIDFVReport As Nullable(Of System.Guid), countOfXMLCharacter As Nullable(Of Integer), rr_StateFVReport As ObjectParameter, detail As ObjectParameter) As Integer
        Dim uIDFVReportParameter As ObjectParameter = If(uIDFVReport.HasValue, New ObjectParameter("UIDFVReport", uIDFVReport), New ObjectParameter("UIDFVReport", GetType(System.Guid)))

        Dim countOfXMLCharacterParameter As ObjectParameter = If(countOfXMLCharacter.HasValue, New ObjectParameter("CountOfXMLCharacter", countOfXMLCharacter), New ObjectParameter("CountOfXMLCharacter", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_C5_FVReportXMLControl", uIDFVReportParameter, countOfXMLCharacterParameter, rr_StateFVReport, detail)
    End Function

    Public Overridable Function sp_Do_EditAndroidVersion(iDUser As Nullable(Of Integer), androidVersion As String) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim androidVersionParameter As ObjectParameter = If(androidVersion IsNot Nothing, New ObjectParameter("AndroidVersion", androidVersion), New ObjectParameter("AndroidVersion", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Do_EditAndroidVersion", iDUserParameter, androidVersionParameter)
    End Function

    Public Overridable Function sp_Get_SV_AllFeeFromTRACE() As ObjectResult(Of String)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_SV_AllFeeFromTRACE")
    End Function

    Public Overridable Function sp_Get_CreditorsCombo() As ObjectResult(Of sp_Get_CreditorsCombo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_CreditorsCombo_Result)("sp_Get_CreditorsCombo")
    End Function

    Public Overridable Function AGsp_ITabletJsonLog(iDUser As Nullable(Of Integer), iDZapisTablet As Nullable(Of Integer), iDZ As Nullable(Of System.Guid), tabletVersion As String, stateOnTablet As Nullable(Of Short), rr_TypJsonDat As Nullable(Of Short), jsonText As String, xMLText As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim iDZapisTabletParameter As ObjectParameter = If(iDZapisTablet.HasValue, New ObjectParameter("IDZapisTablet", iDZapisTablet), New ObjectParameter("IDZapisTablet", GetType(Integer)))

        Dim iDZParameter As ObjectParameter = If(iDZ.HasValue, New ObjectParameter("IDZ", iDZ), New ObjectParameter("IDZ", GetType(System.Guid)))

        Dim tabletVersionParameter As ObjectParameter = If(tabletVersion IsNot Nothing, New ObjectParameter("TabletVersion", tabletVersion), New ObjectParameter("TabletVersion", GetType(String)))

        Dim stateOnTabletParameter As ObjectParameter = If(stateOnTablet.HasValue, New ObjectParameter("StateOnTablet", stateOnTablet), New ObjectParameter("StateOnTablet", GetType(Short)))

        Dim rr_TypJsonDatParameter As ObjectParameter = If(rr_TypJsonDat.HasValue, New ObjectParameter("rr_TypJsonDat", rr_TypJsonDat), New ObjectParameter("rr_TypJsonDat", GetType(Short)))

        Dim jsonTextParameter As ObjectParameter = If(jsonText IsNot Nothing, New ObjectParameter("JsonText", jsonText), New ObjectParameter("JsonText", GetType(String)))

        Dim xMLTextParameter As ObjectParameter = If(xMLText IsNot Nothing, New ObjectParameter("XMLText", xMLText), New ObjectParameter("XMLText", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_ITabletJsonLog", iDUserParameter, iDZapisTabletParameter, iDZParameter, tabletVersionParameter, stateOnTabletParameter, rr_TypJsonDatParameter, jsonTextParameter, xMLTextParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_Get_CreditorDetail_G2(iDSpisu As Nullable(Of Integer), zalozka As String) As ObjectResult(Of sp_Get_CreditorDetail_G2_Result)
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim zalozkaParameter As ObjectParameter = If(zalozka IsNot Nothing, New ObjectParameter("Zalozka", zalozka), New ObjectParameter("Zalozka", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_Get_CreditorDetail_G2_Result)("sp_Get_CreditorDetail_G2", iDSpisuParameter, zalozkaParameter)
    End Function

    Public Overridable Function sp_Run_3xand5xto40(iDSpisu As Nullable(Of Integer), aCC As String, lL_LastLapse As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Dim aCCParameter As ObjectParameter = If(aCC IsNot Nothing, New ObjectParameter("ACC", aCC), New ObjectParameter("ACC", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_Run_3xand5xto40", iDSpisuParameter, aCCParameter, lL_LastLapse)
    End Function

    Public Overridable Function sp_ANDR_Get_Spisy_G2(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_Get_Spisy_G2_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_Get_Spisy_G2_Result)("sp_ANDR_Get_Spisy_G2", iDUserParameter, tStampParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_SpisyDluznika_G2(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_SpisyDluznika_G2_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_SpisyDluznika_G2_Result)("sp_ANDR_T5_SpisyDluznika_G2", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function AGsp_GetCommentInspektoraWhenFileToClose(iDSpisu As Nullable(Of Integer), commentInsp As ObjectParameter) As Integer
        Dim iDSpisuParameter As ObjectParameter = If(iDSpisu.HasValue, New ObjectParameter("IDSpisu", iDSpisu), New ObjectParameter("IDSpisu", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("AGsp_GetCommentInspektoraWhenFileToClose", iDSpisuParameter, commentInsp)
    End Function

    Public Overridable Function sp_ANDR_B5_DetailSpisuG2(iDUser As Nullable(Of Integer), tStamp As Nullable(Of Integer), rowCnt As ObjectParameter) As Integer
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim tStampParameter As ObjectParameter = If(tStamp.HasValue, New ObjectParameter("TStamp", tStamp), New ObjectParameter("TStamp", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sp_ANDR_B5_DetailSpisuG2", iDUserParameter, tStampParameter, rowCnt)
    End Function

    Public Overridable Function sp_ANDR_T5_DetailSpisuG2(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_DetailSpisuG2_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_DetailSpisuG2_Result)("sp_ANDR_T5_DetailSpisuG2", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_Get_SV_AllCasesFromTRACEByUser(iDUser As Nullable(Of Integer), finishedCases As Nullable(Of Boolean)) As ObjectResult(Of String)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim finishedCasesParameter As ObjectParameter = If(finishedCases.HasValue, New ObjectParameter("FinishedCases", finishedCases), New ObjectParameter("FinishedCases", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("sp_Get_SV_AllCasesFromTRACEByUser", iDUserParameter, finishedCasesParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_DetailSpisuG3(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_DetailSpisuG3_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_DetailSpisuG3_Result)("sp_ANDR_T5_DetailSpisuG3", iDUserParameter, skipParameter, takeParameter)
    End Function

    Public Overridable Function sp_ANDR_T5_CampMemberG2(iDUser As Nullable(Of Integer), skip As Nullable(Of Integer), take As Nullable(Of Integer)) As ObjectResult(Of sp_ANDR_T5_CampMemberG2_Result)
        Dim iDUserParameter As ObjectParameter = If(iDUser.HasValue, New ObjectParameter("IDUser", iDUser), New ObjectParameter("IDUser", GetType(Integer)))

        Dim skipParameter As ObjectParameter = If(skip.HasValue, New ObjectParameter("Skip", skip), New ObjectParameter("Skip", GetType(Integer)))

        Dim takeParameter As ObjectParameter = If(take.HasValue, New ObjectParameter("Take", take), New ObjectParameter("Take", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_ANDR_T5_CampMemberG2_Result)("sp_ANDR_T5_CampMemberG2", iDUserParameter, skipParameter, takeParameter)
    End Function

End Class
